#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-92,-89,-88,57,58,609,-64,566,61,270,59,60,62,23,24,66',
'67,-95,-507,-90,597,829,22,28,27,90,89,91,92,751,639,17,639,-92,678',
'-91,597,7,41,6,9,94,93,-75,84,50,86,85,87,270,88,95,96,-94,81,82,270',
'38,39,101,639,783,-84,638,100,638,543,608,710,587,-81,-437,-93,535,265',
'577,534,-89,-437,36,599,598,30,-507,566,52,341,340,54,745,32,566,566',
'638,40,269,599,598,604,-91,-90,-509,18,401,-507,-81,-80,79,73,75,76',
'77,78,-92,265,-92,74,80,-92,566,101,-87,565,-82,56,100,-437,53,265,-84',
'37,83,63,64,65,269,51,-84,-510,-83,57,58,269,535,579,61,537,59,60,62',
'256,257,66,67,-82,-446,710,-86,779,255,28,27,90,89,91,92,-84,101,217',
'709,542,265,100,-84,586,41,-85,-509,94,93,778,84,50,86,85,87,259,88',
'95,96,843,81,82,101,38,39,-80,101,100,565,639,200,100,-88,101,101,565',
'565,201,100,100,562,-91,-90,-91,-90,208,-91,-90,212,597,-82,52,602,225',
'54,-83,254,203,204,225,40,101,638,565,866,583,100,-89,216,710,561,73',
'581,79,73,75,76,77,78,74,203,204,74,80,101,199,709,-82,-268,100,56,203',
'204,53,-82,-268,37,83,63,64,65,514,51,597,446,-439,57,58,515,599,598',
'61,-439,59,60,62,23,24,66,67,582,-509,-83,788,761,22,28,27,90,89,91',
'92,597,762,17,-445,535,535,597,537,537,41,-445,-268,94,93,305,84,50',
'86,85,87,-95,88,95,96,513,81,82,-83,38,39,101,599,598,595,-83,100,101',
'101,709,909,-90,100,100,620,-445,575,910,-442,305,-92,208,-445,576,212',
'-442,661,52,-440,-445,54,599,598,600,252,-440,40,599,598,610,619,-275',
'203,204,18,203,204,773,-275,79,73,75,76,77,78,-84,-274,-268,74,80,-446',
'522,-92,-274,-268,908,56,772,-510,53,-445,574,37,83,63,64,65,-321,51',
'-443,101,-82,57,58,-321,100,-443,61,-90,59,60,62,256,257,66,67,-275',
'785,807,788,635,255,288,292,90,89,91,92,-88,-94,217,-274,-268,409,572',
'615,573,41,411,410,94,93,794,84,50,86,85,87,-276,88,95,96,-321,81,82',
'-276,38,39,795,225,229,234,235,236,231,233,241,242,237,238,-275,218',
'219,583,549,239,240,-275,208,-275,797,212,442,101,52,552,-275,54,100',
'443,222,552,228,40,224,223,220,221,232,230,226,216,227,-276,798,-441',
'79,73,75,76,77,78,-441,799,525,74,80,-444,243,552,-227,526,101,56,-444',
'-275,53,100,582,37,83,63,64,65,-275,51,-437,444,655,57,58,807,788,-437',
'61,656,59,60,62,256,257,66,67,103,104,105,106,107,255,288,292,90,89',
'91,92,101,-434,217,-276,444,100,802,615,-434,41,-276,483,94,93,481,84',
'50,86,85,87,305,88,95,96,788,81,82,811,38,39,812,225,229,234,235,236',
'231,233,241,242,237,238,-274,218,219,-274,550,239,240,-274,208,522,-274',
'212,-510,814,52,-510,-276,54,549,788,222,573,228,40,224,223,220,221',
'232,230,226,216,227,203,204,262,79,73,75,76,77,78,263,546,592,74,80',
'603,243,483,-86,593,692,56,202,-274,53,-94,-274,37,83,63,64,65,607,51',
'298,299,655,57,58,341,340,539,61,656,59,60,62,256,257,66,67,103,104',
'105,106,107,255,288,292,90,89,91,92,-87,-509,217,338,337,341,340,-95',
'816,41,518,519,94,93,538,84,50,86,85,87,305,88,95,96,611,81,82,764,38',
'39,614,225,229,234,235,236,231,233,241,242,237,238,305,218,219,203,204',
'239,240,617,208,397,398,212,-254,824,52,826,829,54,225,831,222,524,228',
'40,224,223,220,221,232,230,226,216,227,833,490,523,79,73,75,76,77,78',
'618,-256,490,74,80,265,243,305,-227,274,878,56,516,509,53,508,507,37',
'83,63,64,65,-63,51,265,835,836,57,58,837,95,96,61,-255,59,60,62,256',
'257,66,67,103,104,105,106,107,255,288,292,90,89,91,92,844,845,217,338',
'337,341,340,846,265,41,265,747,94,93,244,84,50,86,85,87,225,88,95,96',
'849,81,82,850,38,39,678,225,229,234,235,236,231,233,241,242,237,238',
'490,218,219,852,483,239,240,-254,208,856,481,212,225,225,52,861,479',
'54,863,225,222,213,228,40,224,223,220,221,232,230,226,216,227,448,447',
'225,79,73,75,76,77,78,445,869,871,74,80,872,243,636,222,305,692,56,224',
'223,53,713,573,37,83,63,64,65,705,51,702,882,-257,57,58,412,700,883',
'61,885,59,60,62,256,257,66,67,399,690,388,-510,552,255,288,292,90,89',
'91,92,385,895,217,338,337,341,340,896,686,41,685,305,94,93,901,84,50',
'86,85,87,259,88,95,96,902,81,82,578,38,39,829,225,229,234,235,236,231',
'233,241,242,237,238,831,218,219,878,684,239,240,652,208,297,305,212',
'296,911,52,678,244,54,528,657,222,252,228,40,224,223,220,221,232,230',
'226,216,227,917,244,670,79,73,75,76,77,78,684,198,197,74,80,196,243',
'338,337,341,340,56,195,668,53,927,829,37,83,63,64,65,225,51,929,930',
'108,57,58,-75,667,97,61,665,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,222,,217,,224,223,220,221,,41,,,94,93,,84,50,86,85,87,259',
'88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237,238',
',218,219,,,239,240,,208,,,212,,,52,,225,54,,644,222,252,228,40,224,223',
'220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,222,243,,',
'224,223,56,,,53,,,37,83,63,64,65,225,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,222,,17,,224,223,220,221,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231',
'233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54,,,222,,228',
'40,224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80',
',243,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,28,27,90,89,91,92,,554,217,333,331,330,,332,,41,,,94',
'93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225,229,234,235,236,231',
'233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54,,254,222',
',228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,',
'74,80,,243,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,554,217,333,331,330,,332',
',41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225,229,234',
'235,236,231,233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,',
',54,,644,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75',
'76,77,78,,,,74,80,,243,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,',
'9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236',
'231,233,241,242,237,238,,218,219,,,239,240,,36,,,30,,,52,,,54,,32,222',
',228,40,224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74',
'80,,243,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223,220',
'221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,243,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240',
',208,,,212,213,,52,,,54,,,222,,228,40,224,223,220,221,232,230,226,18',
'227,,,,79,73,75,76,77,78,,,,74,80,,243,,,,,56,,,53,,,37,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229',
'234,235,236,231,233,241,242,237,238,,218,219,,,239,240,,208,,,212,,',
'52,,,54,,,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75',
'76,77,78,,,,74,80,,243,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,',
'41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225,229,234,235',
'236,231,233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54',
',,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77',
'78,,,,74,80,,243,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233',
'241,242,237,238,,218,219,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40',
'224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,243',
',,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
'259,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,,239,240,,208,,,212,,,52,,,54,,254,222,252,228,40,224',
'223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,243,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
'259,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,,239,240,,208,,,212,,,52,,,54,,254,222,252,228,40,224',
'223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,243,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,554,217,333,331,330,,332,,41,,,94,93',
',84,50,86,85,87,259,88,95,96,,81,82,,38,39,554,,333,331,330,,332,,,557',
',,,,,,,560,,,208,,,212,225,,52,,,54,,254,,252,,40,,,557,,239,240,,216',
',,560,,79,73,75,76,77,78,,222,,74,80,224,223,220,221,,,56,,,53,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,554,17,333,331,330,,332,7,41,,9,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,557,,,,,,,,804,,,36,,,30,,,52,,,54,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,225,-530,-530,-530,-530,231,233,,,-530,-530,,,,,,239,240,,36',
',,30,,,52,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,324,,333,331,330',
',332,,,,,,,,,,,,,,,,,696,,,212,,,52,,,54,,,,,,335,,,,,,,,338,337,341',
'340,,79,73,75,76,77,78,766,,,74,80,,,,,,,56,,,53,,,293,83,63,64,65,8',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,',
'17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,-530',
'-530,-530,-530,231,233,,,-530,-530,,,,,,239,240,,36,,,30,,,52,,,54,',
'32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241',
'242,237,238,,-530,-530,,,239,240,,36,,,278,,,52,,,54,,32,222,,228,40',
'224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,324,,333,331,330,,332,,,,,,,,,,,,,,,,,286,,,283',
',,52,,,54,,282,,,,335,,,,,,,,338,337,341,340,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,293,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,739,,333,331,330,738,332,,,,,,,,,,,,,,,,,286',
',,212,,,52,,,54,,,,,,335,732,,,,,,,338,337,341,340,,79,73,75,76,77,78',
',,,74,80,,,,295,,,56,,,53,,,293,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233',
'241,242,237,238,,-530,-530,,,239,240,,36,,,30,,,52,,,54,,32,222,,228',
'40,224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,225,-530,-530,-530,-530,231,233,,,-530,-530',
',,,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223,220,221,232',
'230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',225,-530,-530,-530,-530,231,233,,,-530,-530,,,,,,239,240,,36,,,30,',
',52,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,-530,-530,-530',
'-530,231,233,,,-530,-530,,,,,,239,240,,208,,,212,,,52,,,54,,644,222',
'252,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,225,-530,-530,-530,-530,231,233',
',,-530,-530,,,,,,239,240,,208,,,212,,,52,,,54,,,222,,228,40,224,223',
'220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,',
',255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54',
',,222,,228,40,224,223,220,221,,,226,216,227,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,',
'212,,,52,,,54,,,222,,228,40,224,223,220,221,,,226,216,227,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231',
'233,241,,237,238,,,,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224',
'223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,',
',,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88',
'95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54',
',254,222,,228,40,224,223,220,221,,,226,216,227,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,,,237',
'238,,,,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223,220,221',
'232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,225,,,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54,,,222,,228,40,224',
'223,220,221,,,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96',
',81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54,,254',
'222,,228,40,224,223,220,221,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,259,88,95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,,212',
',,52,,,54,,,222,,228,40,224,223,220,221,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212',
',,52,,,54,,254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,101,,,,,100,56,,,53,,,37,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91',
'92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,324,,333',
'331,330,,332,,,,,,,,,,,,,,,,,353,,,30,,,52,,,54,,32,,,,335,,545,,,,',
',338,337,341,340,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,358,,88,95,96,,81,82',
'739,,333,331,330,738,332,,,,,,,,,,,,,,364,,,359,,,212,,,52,,,54,,,,',
',335,,,,,,,,338,337,341,340,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,293,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,644,,,,40,,,,,,,,216,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,324,,333,331,330,,332,,,,,,,,,,,,,,,,,890,,,212,,,52,,,54,,,',
',,335,319,,,,,,,338,337,341,340,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,293,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,',
',,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40',
',,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,6,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,401,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6',
'9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,254,,,,40,,,,,,,',
'216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92',
',,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,208,,,212,,,52,,,54,,750,,,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,418,,,',
'40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,418,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,',
'94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208',
',,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
'259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
'254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,',
',41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,',
',40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,',
',255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40',
',,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,450,52,,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,401,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,',
',,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40',
',,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,',
'9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,',
',,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,208,,,212,,,52,,,54,,254,,252,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,',
'94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',208,,,212,,,499,,,54,,254,,252,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212',
',503,52,,,54,,254,,252,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,644,,252,,40',
',,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,',
'9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,278,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,739,,333,331,330,738,332,,,,,,,,,,,',
',,,,,286,,,212,,,52,,,54,,,,,,335,732,,,,,,,338,337,341,340,,79,73,75',
'76,77,78,,,,74,80,,,,511,,,56,,,53,,,293,83,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',36,,,278,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86',
'85,358,,88,95,96,,81,82,739,,333,331,330,,332,,,,,,,,,,,,,,,,,359,,',
'212,,,52,,,54,,,,,,335,,,,,,,,338,337,341,340,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,293,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,286,,,283,,,52,,,54,,,,,,,,,,,,,,,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,',
',40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,',
',,,,,,,,,,,,,,,,,,,,,286,,,283,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,418,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,',
',,,,,,,,,,286,,,283,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,',
',74,80,,,,,,,56,,,53,,,293,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,',
',216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91',
'92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,208,,,212,528,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,',
'9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,',
',40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,-529',
',,,,,,-529,-529,-529,,,-529,-529,-529,,-529,,,,,,286,,,283,-529,,52',
',,54,,,,,-529,-529,,-529,-529,-529,-529,-529,,,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,-437,,53,,,293,83,-437,-437,-437,-529,,-437,-437,-437',
',-437,-529,,,,,265,-529,-437,,-437,-437,-437,,,,,,,,-437,-437,,-437',
'-437,-437,-437,-437,-529,,,,,,,,,,,,,-529,,-529,,,-529,,,,,-437,-437',
'-437,-437,-437,-437,-437,-437,-437,-437,-437,-437,-437,-437,,,-437,-437',
'-437,,-437,-437,,,-437,,,-437,,-437,,-437,,-437,,-437,-437,-437,-437',
'-437,-437,-437,,-437,,-437,,,,,,,,,,,,,-437,-437,-437,-437,-434,-437',
',-437,-437,,-437,-434,-434,-434,,,-434,-434,-434,,-434,,,,,,,,-434,',
'-434,-434,-434,,,,,,,,-434,-434,,-434,-434,-434,-434,-434,,,,,,,,,,',
',,,,,,,,,,,,,-434,-434,-434,-434,-434,-434,-434,-434,-434,-434,-434',
'-434,-434,-434,,,-434,-434,-434,,-434,-434,,,-434,,,-434,,-434,,-434',
',-434,,-434,-434,-434,-434,-434,-434,-434,,-434,,-434,,,,,,,,,,,,,-434',
'-434,-434,-434,-274,-434,,-434,-434,,-434,-274,-274,-274,,,,-274,-274',
',-274,,,,,,,,,,,,,,,,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,,,',
',,,,,,,,,,,,,,,,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,,,-274,-274,-274,,628,,,,-274,,,,,,,-274,,-274,,-274',
'-274,-274,-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274,-274,,-85',
'-513,-274,,,-274,,-93,-513,-513,-513,,,,-513,-513,,-513,,,,,,,,,-513',
',,,,,,,,,,-513,-513,,-513,-513,-513,-513,-513,,,,,,,,,,,,,,,,,,,,,,',
',-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513',
',,-513,-513,-513,,625,,,,-513,,,,,,,-513,,-513,,-513,-513,-513,-513',
'-513,-513,-513,,-513,-513,-513,,,,,,,,,,,,,-513,-513,,-83,-274,-513',
',,-513,,-91,-274,-274,-274,,,-274,-274,-274,,-274,,,,,,,,,,-274,-274',
',,,,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,,,,,,,,,,,,,,,,,,,,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,,,-274',
'-274,-274,,628,-274,,,-274,,,-274,,-274,,-274,,-274,,-274,-274,-274',
'-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274,-274,-274,-274,-513',
'-274,,,-274,,-93,-513,-513,-513,,,-513,-513,-513,,-513,,,,,,,,,-513',
'-513,-513,,,,,,,,,-513,-513,,-513,-513,-513,-513,-513,,,,,,,,,,,,,,',
',,,,,,,,,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513',
'-513,-513,,,-513,-513,-513,,763,-513,,,-513,,,-513,,-513,,-513,,-513',
',-513,-513,-513,-513,-513,-513,-513,,-513,-513,-513,,,,,,,,,,,,,-513',
'-513,-513,-513,-514,-513,,,-513,,-91,-514,-514,-514,,,-514,-514,-514',
',-514,,,,,,,,,-514,-514,-514,-514,,,,,,,,-514,-514,,-514,-514,-514,-514',
'-514,,,,,,,,,,,,,,,,,,,,,,,,-514,-514,-514,-514,-514,-514,-514,-514',
'-514,-514,-514,-514,-514,-514,,,-514,-514,-514,,,-514,,,-514,,,-514',
',-514,,-514,,-514,,-514,-514,-514,-514,-514,-514,-514,,-514,-514,-514',
',,,,,,,,,,,,-514,-514,-514,-514,-282,-514,,-514,-514,,,-282,-282,-282',
',,-282,-282,-282,,-282,,,,,,,,,,-282,-282,,,,,,,,,-282,-282,,-282,-282',
'-282,-282,-282,,,,,,,,,,,,,,,,,,,,,,,,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,-282,-282,-282,,,-282,-282,-282,,,-282,,274',
'-282,,,-282,,-282,,-282,,-282,,-282,-282,-282,-282,-282,-282,-282,,-282',
',-282,,,,,,,,,,,,,-282,-282,-282,-282,-529,-282,,,-282,,,-529,-529,-529',
',,-529,-529,-529,,-529,,,,,,,,,-529,-529,-529,,,,,,,,,-529,-529,,-529',
'-529,-529,-529,-529,,,,,,,,,,,,,,,,,,,,,,,,-529,-529,-529,-529,-529',
'-529,-529,-529,-529,-529,-529,-529,-529,-529,,,-529,-529,-529,,,-529',
',265,-529,,,-529,,-529,,-529,,-529,,-529,-529,-529,-529,-529,-529,-529',
',-529,-529,-529,,,,,,,,,,,,,-529,-529,-529,-529,-370,-529,,,-529,,,-370',
'-370,-370,,,-370,-370,-370,,-370,,,,,,,,,-370,-370,-370,,,,,,,,,-370',
'-370,,-370,-370,-370,-370,-370,,,,,,,,,,,,,,,,,,,,,,,,-370,-370,-370',
'-370,-370,-370,-370,-370,-370,-370,-370,-370,-370,-370,,,-370,-370,-370',
',,-370,,265,-370,,,-370,,-370,,-370,,-370,,-370,-370,-370,-370,-370',
'-370,-370,,-370,-370,-370,,,,,,,,,,,,,-370,-370,-370,-370,-269,-370',
',,-370,,,-269,-269,-269,,,-269,-269,-269,,-269,,,,,,,,,,-269,-269,-269',
',,,,,,,-269,-269,,-269,-269,-269,-269,-269,,,,,,,,,,,,,,,,,,,,,,,,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,,,-269',
'-269,-269,,,-269,,,-269,,,-269,,-269,,-269,,-269,,-269,-269,-269,-269',
'-269,-269,-269,,-269,,-269,,,,,,,,,,,,,-269,-269,-269,-269,-515,-269',
',-269,-269,,,-515,-515,-515,,,-515,-515,-515,,-515,,,,,,,,,-515,-515',
'-515,-515,,,,,,,,-515,-515,,-515,-515,-515,-515,-515,,,,,,,,,,,,,,,',
',,,,,,,,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515',
'-515,-515,,,-515,-515,-515,,,-515,,,-515,,,-515,,-515,,-515,,-515,,-515',
'-515,-515,-515,-515,-515,-515,,-515,-515,-515,,,,,,,,,,,,,-515,-515',
'-515,-515,-529,-515,,-515,-515,,,-529,-529,-529,,,-529,-529,-529,,-529',
',,,,,,,,,-529,,,,,,,,,,-529,-529,,-529,-529,-529,-529,-529,,,,,,717',
'430,,,718,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,-529',
'144,145,131,132,,,-529,,,265,,265,-529,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,,,146,-529,,,,,,,,,,,,,-529,,-529,,,-529,156',
'167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165',
'154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183',
'184,185,186,187,151,158,149,150,147,148,,111,113,110,,112,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192',
',,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160,155',
'181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164',
'152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113,,,112',
',,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
',,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161',
'160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169',
'179,164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111',
'113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,',
'144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188',
'191,178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182',
'177,176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150',
'147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129',
',,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173',
'163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166',
'159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151',
'158,149,150,147,148,,111,113,395,394,112,,396,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153,173',
'163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166',
'159,,,,175,182,177,373,372,374,371,152,171,170,183,184,185,186,187,151',
'158,149,150,369,370,,367,113,86,85,368,,88,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,378,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,,111,113,395,394,112,,396,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,487,430,146,,488,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'719,436,146,,720,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,432,436,146,,434,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,426,430,146,,427,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265,',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,487,430,146',
',488,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145',
'131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,724,436,146,,858,,,,,,,,,142,143,,139,121,122,123,130,127,129,,',
'124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,487,430,146,,488,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,487,430,146,,488,,,,,,',
',,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132',
',,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,487',
'430,146,,488,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,922,430,146,,923,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,144,145,131,132,,,,,,265,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,629,430,146,,630,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265,',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,631,436,146',
',632,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145',
'131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,631,436,146,,632,,,,,,,,,142,143,,139,121,122,123,130,127,129,,',
'124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,629,430,146,,630,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,924,436,146,,925,,,,,,',
',,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132',
',,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,675',
'436,146,,676,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,672,430,146,,673,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,144,145,131,132,,,,,,265,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,724,436,146,,722,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,',
',,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(24790, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,923,814,351,0,0,389,667,855,0,26,0,0,0,0,0,0,0,354,358,717',
'605,875,0,0,0,0,0,0,0,618,501,0,490,718,669,719,386,0,0,0,0,0,0,667',
'0,0,0,0,0,290,0,0,0,577,0,0,55,0,0,733,477,671,673,501,733,490,318,389',
'569,363,618,358,720,310,26,353,310,618,358,0,605,605,0,358,345,0,552',
'552,0,605,0,344,862,477,0,26,386,386,386,924,922,719,0,350,358,814,351',
'0,0,0,0,0,0,923,290,923,0,0,923,813,855,354,855,717,0,855,358,0,674',
'673,0,0,513,513,513,290,513,718,720,719,513,513,55,687,359,513,687,513',
'513,513,513,513,513,513,672,35,815,577,662,513,513,513,513,513,513,513',
'673,569,513,569,318,677,569,673,363,513,720,924,513,513,659,513,513',
'513,513,513,513,513,513,513,764,513,513,363,513,513,35,345,363,345,500',
'13,345,35,344,862,344,862,13,344,862,342,924,922,924,922,513,924,922',
'513,384,672,513,384,680,513,675,513,307,307,681,513,813,500,813,813',
'361,813,764,513,568,339,71,361,513,513,513,513,513,513,71,729,729,513',
'513,815,13,815,672,891,815,513,594,594,513,672,891,513,513,499,499,499',
'285,499,380,209,372,499,499,285,384,384,499,372,499,499,499,499,499',
'499,499,361,675,675,683,629,499,499,499,499,499,499,499,382,630,499',
'284,311,314,391,311,314,499,284,891,499,499,307,499,499,499,499,499',
'209,499,499,499,285,499,499,675,499,499,348,380,380,380,675,348,568',
'729,568,889,629,568,729,427,888,352,889,371,594,630,499,888,352,499',
'371,499,499,373,284,499,382,382,382,499,373,499,391,391,391,426,911',
'682,682,499,449,449,654,911,499,499,499,499,499,499,427,676,287,499',
'499,207,445,427,676,287,889,499,653,676,499,888,352,499,499,522,522',
'522,42,522,370,587,426,522,522,42,587,370,522,426,522,522,522,522,522',
'522,522,911,682,704,704,449,522,522,522,522,522,522,522,207,445,522',
'676,287,110,349,416,349,522,110,110,522,522,688,522,522,522,522,522',
'783,522,522,522,42,522,522,783,522,522,689,416,416,416,416,416,416,416',
'416,416,416,416,579,416,416,695,692,416,416,579,522,516,695,522,206',
'275,522,694,516,522,275,206,416,327,416,522,416,416,416,416,416,416',
'416,522,416,783,696,374,522,522,522,522,522,522,374,697,300,522,522',
'369,416,698,416,300,727,522,369,579,522,727,695,522,522,523,523,523',
'516,523,368,206,494,523,523,912,912,368,523,494,523,523,523,523,523',
'523,523,666,666,666,666,666,523,523,523,523,523,523,523,3,367,523,930',
'300,3,701,634,367,523,930,643,523,523,641,523,523,523,523,523,494,523',
'523,523,706,523,523,712,523,523,714,634,634,634,634,634,634,634,634',
'634,634,634,722,634,634,925,326,634,634,722,523,297,925,523,722,716',
'523,925,930,523,324,898,634,898,634,523,634,634,634,634,634,634,634',
'523,634,343,343,25,523,523,523,523,523,523,25,323,376,523,523,385,634',
'315,297,376,546,523,14,722,523,297,925,523,523,524,524,524,388,524,37',
'37,776,524,524,829,829,313,524,776,524,524,524,524,524,524,524,276,276',
'276,276,276,524,524,524,524,524,524,524,14,724,524,546,546,546,546,14',
'725,524,293,293,524,524,312,524,524,524,524,524,776,524,524,524,407',
'524,524,633,524,524,413,658,658,658,658,658,658,658,658,658,658,658',
'309,658,658,15,15,658,658,419,524,83,83,524,421,734,524,735,736,524',
'302,739,658,299,658,524,658,658,658,658,658,658,658,524,658,742,626',
'298,524,524,524,524,524,524,425,749,621,524,524,292,658,289,658,288',
'902,524,286,281,524,280,279,524,524,483,483,483,277,483,433,743,743',
'483,483,743,743,743,483,616,483,483,483,483,483,483,483,5,5,5,5,5,483',
'483,483,483,483,483,483,767,768,483,902,902,902,902,771,774,483,775',
'609,483,483,777,483,483,483,483,483,455,483,483,483,780,483,483,781',
'483,483,782,476,476,476,476,476,476,476,476,476,476,476,264,476,476',
'786,253,476,476,789,483,790,250,483,456,457,483,805,249,483,808,454',
'476,217,476,483,476,476,476,476,476,476,476,483,476,211,210,458,483',
'483,483,483,483,483,208,817,820,483,483,821,476,476,454,822,799,483',
'454,454,483,571,570,483,483,481,481,481,564,481,559,839,840,481,481',
'193,555,847,481,848,481,481,481,481,481,481,481,97,544,78,858,859,481',
'481,481,481,481,481,481,77,864,481,799,799,799,799,865,531,481,530,41',
'481,481,873,481,481,481,481,481,481,481,481,481,874,481,481,355,481',
'481,877,247,247,247,247,247,247,247,247,247,247,247,878,247,247,826',
'529,247,247,492,481,36,493,481,34,890,481,520,20,481,517,495,247,481',
'247,481,247,247,247,247,247,247,247,481,247,900,496,512,481,481,481',
'481,481,481,907,12,11,481,481,10,247,826,826,826,826,481,9,510,481,916',
'918,481,481,479,479,479,473,479,919,921,6,479,479,507,506,1,479,502',
'479,479,479,479,479,479,479,,,,,,479,479,479,479,479,479,479,473,,479',
',473,473,473,473,,479,,,479,479,,479,479,479,479,479,479,479,479,479',
',479,479,,479,479,,19,19,19,19,19,19,19,19,19,19,19,,19,19,,,19,19,',
'479,,,479,,,479,,453,479,,479,19,479,19,479,19,19,19,19,19,19,19,479',
'19,,,,479,479,479,479,479,479,,,,479,479,453,19,,,453,453,479,,,479',
',,479,479,528,528,528,472,528,,,,528,528,,,,528,,528,528,528,528,528',
'528,528,,,,,,528,528,528,528,528,528,528,472,,528,,472,472,472,472,',
'528,,,528,528,,528,528,528,528,528,,528,528,528,,528,528,,528,528,,679',
'679,679,679,679,679,679,679,679,679,679,,679,679,,,679,679,,528,,,528',
',,528,,,528,,,679,,679,528,679,679,679,679,679,679,679,528,679,,,,528',
'528,528,528,528,528,,,,528,528,,679,,,,,528,,,528,,,528,528,908,908',
'908,,908,,,,908,908,,,,908,,908,908,908,908,908,908,908,,,,,,908,908',
'908,908,908,908,908,,804,908,804,804,804,,804,,908,,,908,908,,908,908',
'908,908,908,908,908,908,908,,908,908,,908,908,,424,424,424,424,424,424',
'424,424,424,424,424,,424,424,,,424,424,,908,,,908,,,908,,,908,,908,424',
',424,908,424,424,424,424,424,424,424,908,424,,,,908,908,908,908,908',
'908,,,,908,908,,424,,,,,908,,,908,,,908,908,534,534,534,,534,,,,534',
'534,,,,534,,534,534,534,534,534,534,534,,,,,,534,534,534,534,534,534',
'534,,560,534,560,560,560,,560,,534,,,534,534,,534,534,534,534,534,534',
'534,534,534,,534,534,,534,534,,748,748,748,748,748,748,748,748,748,748',
'748,,748,748,,,748,748,,534,,,534,,,534,,,534,,534,748,,748,534,748',
'748,748,748,748,748,748,534,748,,,,534,534,534,534,534,534,,,,534,534',
',748,,,,,534,,,534,,,534,534,906,906,906,906,906,,,,906,906,,,,906,',
'906,906,906,906,906,906,906,,,,,,906,906,906,906,906,906,906,,,906,',
',,,,906,906,,906,906,906,,906,906,906,906,906,,906,906,906,,906,906',
',906,906,,527,527,527,527,527,527,527,527,527,527,527,,527,527,,,527',
'527,,906,,,906,,,906,,,906,,906,527,,527,906,527,527,527,527,527,527',
'527,906,527,,,,906,906,906,906,906,906,,,,906,906,,527,,,,,906,,,906',
',,906,906,899,899,899,899,899,,,,899,899,,,,899,,899,899,899,899,899',
'899,899,,,,,,899,899,899,899,899,899,899,,,899,,,,,,899,899,,899,899',
'899,,899,899,899,899,899,,899,899,899,,899,899,,899,899,,755,755,755',
'755,755,755,755,755,755,755,755,,755,755,,,755,755,,899,,,899,,,899',
',,899,,899,755,,755,899,755,755,755,755,755,755,755,899,755,,,,899,899',
'899,899,899,899,,,,899,899,,755,,,,,899,,,899,,,899,899,17,17,17,,17',
',,,17,17,,,,17,,17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17,17,,,17',
',,,,,,17,,,17,17,,17,17,17,17,17,,17,17,17,,17,17,,17,17,,842,842,842',
'842,842,842,842,842,842,842,842,,842,842,,,842,842,,17,,,17,17,,17,',
',17,,,842,,842,17,842,842,842,842,842,842,842,17,842,,,,17,17,17,17',
'17,17,,,,17,17,,842,,,,,17,,,17,,,17,17,18,18,18,,18,,,,18,18,,,,18',
',18,18,18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18',
',18,18,18,18,18,,18,18,18,,18,18,,18,18,,765,765,765,765,765,765,765',
'765,765,765,765,,765,765,,,765,765,,18,,,18,,,18,,,18,,,765,,765,18',
'765,765,765,765,765,765,765,18,765,,,,18,18,18,18,18,18,,,,18,18,,765',
',,,,18,,,18,,,18,18,537,537,537,,537,,,,537,537,,,,537,,537,537,537',
'537,537,537,537,,,,,,537,537,537,537,537,537,537,,,537,,,,,,,537,,,537',
'537,,537,537,537,537,537,537,537,537,537,,537,537,,537,537,,439,439',
'439,439,439,439,439,439,439,439,439,,439,439,,,439,439,,537,,,537,,',
'537,,,537,,,439,,439,537,439,439,439,439,439,439,439,537,439,,,,537',
'537,537,537,537,537,,,,537,537,,439,,,,,537,,,537,,,537,537,894,894',
'894,894,894,,,,894,894,,,,894,,894,894,894,894,894,894,894,,,,,,894',
'894,894,894,894,894,894,,,894,,,,,,894,894,,894,894,894,,894,894,894',
'894,894,,894,894,894,,894,894,,894,894,,758,758,758,758,758,758,758',
'758,758,758,758,,758,758,,,758,758,,894,,,894,,,894,,,894,,894,758,',
'758,894,758,758,758,758,758,758,758,894,758,,,,894,894,894,894,894,894',
',,,894,894,,758,,,,,894,,,894,,,894,894,22,22,22,,22,,,,22,22,,,,22',
',22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22',
',22,22,22,22,22,22,22,22,22,,22,22,,22,22,,760,760,760,760,760,760,760',
'760,760,760,760,,760,760,,,760,760,,22,,,22,,,22,,,22,,22,760,22,760',
'22,760,760,760,760,760,760,760,22,760,,,,22,22,22,22,22,22,,,,22,22',
',760,,,,,22,,,22,,,22,22,23,23,23,,23,,,,23,23,,,,23,,23,23,23,23,23',
'23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,,23,23,23,23,23',
'23,23,23,23,,23,23,,23,23,,753,753,753,753,753,753,753,753,753,753,753',
',753,753,,,753,753,,23,,,23,,,23,,,23,,23,753,23,753,23,753,753,753',
'753,753,753,753,23,753,,,,23,23,23,23,23,23,,,,23,23,,753,,,,,23,,,23',
',,23,23,24,24,24,,24,,,,24,24,,,,24,,24,24,24,24,24,24,24,,,,,,24,24',
'24,24,24,24,24,,335,24,335,335,335,,335,,24,,,24,24,,24,24,24,24,24',
'24,24,24,24,,24,24,,24,24,557,,557,557,557,,557,,,335,,,,,,,,335,,,24',
',,24,461,,24,,,24,,24,,24,,24,,,557,,461,461,,24,,,557,,24,24,24,24',
'24,24,,461,,24,24,461,461,461,461,,,24,,,24,,,24,24,542,542,542,542',
'542,,,,542,542,,,,542,,542,542,542,542,542,542,542,,,,,,542,542,542',
'542,542,542,542,,702,542,702,702,702,,702,542,542,,542,542,542,,542',
'542,542,542,542,,542,542,542,,542,542,,542,542,,,,,,,,,,702,,,,,,,,702',
',,542,,,542,,,542,,,542,,542,,,,542,,,,,,,,542,,,,,542,542,542,542,542',
'542,,,,542,542,,,,,,,542,,,542,,,542,542,543,543,543,543,543,,,,543',
'543,,,,543,,543,543,543,543,543,543,543,,,,,,543,543,543,543,543,543',
'543,,,543,,,,,,543,543,,543,543,543,,543,543,543,543,543,,543,543,543',
',543,543,,543,543,,471,471,471,471,471,471,471,,,471,471,,,,,,471,471',
',543,,,543,,,543,,,543,,543,471,,471,543,471,471,471,471,471,471,471',
'543,471,,,,543,543,543,543,543,543,,,,543,543,,,,,,,543,,,543,,,543',
'543,549,549,549,,549,,,,549,549,,,,549,,549,549,549,549,549,549,549',
',,,,,549,549,549,549,549,549,549,,,549,,,,,,,549,,,549,549,,549,549',
'549,549,549,,549,549,549,,549,549,638,,638,638,638,,638,,,,,,,,,,,,',
',,,,549,,,549,,,549,,,549,,,,,,638,,,,,,,,638,638,638,638,,549,549,549',
'549,549,549,638,,,549,549,,,,,,,549,,,549,,,549,549,563,563,563,563',
'563,,,,563,563,,,,563,,563,563,563,563,563,563,563,,,,,,563,563,563',
'563,563,563,563,,,563,,,,,,563,563,,563,563,563,,563,563,563,563,563',
',563,563,563,,563,563,,563,563,,469,469,469,469,469,469,469,,,469,469',
',,,,,469,469,,563,,,563,,,563,,,563,,563,469,,469,563,469,469,469,469',
'469,469,469,563,469,,,,563,563,563,563,563,563,,,,563,563,,,,,,,563',
',,563,,,563,563,30,30,30,30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30',
',,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,,30,30,30,30,30',
',30,30,30,,30,30,,30,30,,451,451,451,451,451,451,451,451,451,451,451',
',451,451,,,451,451,,30,,,30,,,30,,,30,,30,451,,451,30,451,451,451,451',
'451,451,451,30,451,,,,30,30,30,30,30,30,,,,30,30,,,,,,,30,,,30,,,30',
'30,31,31,31,,31,,,,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31',
'31,31,31,,,31,,,,,,,31,,,31,31,,31,31,31,31,31,,31,31,31,,31,31,550',
',550,550,550,,550,,,,,,,,,,,,,,,,,31,,,31,,,31,,,31,,31,,,,550,,,,,',
',,550,550,550,550,,31,31,31,31,31,31,,,,31,31,,,,,,,31,,,31,,,31,31',
'32,32,32,,32,,,,32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32',
'32,32,,,32,,,,,,,32,,,32,32,,32,32,32,32,32,,32,32,32,,32,32,590,,590',
'590,590,590,590,,,,,,,,,,,,,,,,,32,,,32,,,32,,,32,,,,,,590,590,,,,,',
',590,590,590,590,,32,32,32,32,32,32,,,,32,32,,,,32,,,32,,,32,,,32,32',
'567,567,567,567,567,,,,567,567,,,,567,,567,567,567,567,567,567,567,',
',,,,567,567,567,567,567,567,567,,,567,,,,,,567,567,,567,567,567,,567',
'567,567,567,567,,567,567,567,,567,567,,567,567,,452,452,452,452,452',
'452,452,452,452,452,452,,452,452,,,452,452,,567,,,567,,,567,,,567,,567',
'452,,452,567,452,452,452,452,452,452,452,567,452,,,,567,567,567,567',
'567,567,,,,567,567,,,,,,,567,,,567,,,567,567,572,572,572,572,572,,,',
'572,572,,,,572,,572,572,572,572,572,572,572,,,,,,572,572,572,572,572',
'572,572,,,572,,,,,,572,572,,572,572,572,,572,572,572,572,572,,572,572',
'572,,572,572,,572,572,,470,470,470,470,470,470,470,,,470,470,,,,,,470',
'470,,572,,,572,,,572,,,572,,572,470,,470,572,470,470,470,470,470,470',
'470,572,470,,,,572,572,572,572,572,572,,,,572,572,,,,,,,572,,,572,,',
'572,572,887,887,887,887,887,,,,887,887,,,,887,,887,887,887,887,887,887',
'887,,,,,,887,887,887,887,887,887,887,,,887,,,,,,887,887,,887,887,887',
',887,887,887,887,887,,887,887,887,,887,887,,887,887,,468,468,468,468',
'468,468,468,,,468,468,,,,,,468,468,,887,,,887,,,887,,,887,,887,468,',
'468,887,468,468,468,468,468,468,468,887,468,,,,887,887,887,887,887,887',
',,,887,887,,,,,,,887,,,887,,,887,887,885,885,885,,885,,,,885,885,,,',
'885,,885,885,885,885,885,885,885,,,,,,885,885,885,885,885,885,885,,',
'885,,,,,,,885,,,885,885,,885,885,885,885,885,,885,885,885,,885,885,',
'885,885,,462,462,462,462,462,462,462,,,462,462,,,,,,462,462,,885,,,885',
',,885,,,885,,885,462,885,462,885,462,462,462,462,462,462,462,885,462',
',,,885,885,885,885,885,885,,,,885,885,,,,,,,885,,,885,,,885,885,38,38',
'38,,38,,,,38,38,,,,38,,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38',
',,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38,38,,38,38,,467,467',
'467,467,467,467,467,,,467,467,,,,,,467,467,,38,,,38,,,38,,,38,,,467',
',467,38,467,467,467,467,467,467,467,38,467,,,,38,38,38,38,38,38,,,,38',
'38,,,,,,,38,,,38,,,38,38,39,39,39,,39,,,,39,39,,,,39,,39,39,39,39,39',
'39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,,39,39,39,39,39',
',39,39,39,,39,39,,39,39,,463,,,,,,,,,,,,,,,,463,463,,39,,,39,,,39,,',
'39,,,463,,463,39,463,463,463,463,,,463,39,463,,,,39,39,39,39,39,39,',
',,39,39,,,,,,,39,,,39,,,39,39,40,40,40,,40,,,,40,40,,,,40,,40,40,40',
'40,40,40,40,,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40',
'40,40,,40,40,40,,40,40,,40,40,,466,,,,,,,,,,,,,,,,466,466,,40,,,40,',
',40,,,40,,,466,,466,40,466,466,466,466,,,466,40,466,,,,40,40,40,40,40',
'40,,,,40,40,,,,,,,40,,,40,,,40,40,870,870,870,870,870,,,,870,870,,,',
'870,,870,870,870,870,870,870,870,,,,,,870,870,870,870,870,870,870,,',
'870,,,,,,870,870,,870,870,870,,870,870,870,870,870,,870,870,870,,870',
'870,,870,870,,475,475,475,475,475,475,475,475,,475,475,,,,,,475,475',
',870,,,870,,,870,,,870,,870,475,,475,870,475,475,475,475,475,475,475',
'870,475,,,,870,870,870,870,870,870,,,,870,870,,,,,,,870,,,870,,,870',
'870,574,574,574,,574,,,,574,574,,,,574,,574,574,574,574,574,574,574',
',,,,,574,574,574,574,574,574,574,,,574,,,,,,,574,,,574,574,,574,574',
'574,574,574,574,574,574,574,,574,574,,574,574,,464,,,,,,,,,,,,,,,,464',
'464,,574,,,574,,,574,,,574,,574,464,,464,574,464,464,464,464,,,464,574',
'464,,,,574,574,574,574,574,574,,,,574,574,,,,,,,574,,,574,,,574,574',
'731,731,731,731,731,,,,731,731,,,,731,,731,731,731,731,731,731,731,',
',,,,731,731,731,731,731,731,731,,,731,,,,,,731,731,,731,731,731,,731',
'731,731,731,731,,731,731,731,,731,731,,731,731,,474,474,474,474,474',
'474,474,,,474,474,,,,,,474,474,,731,,,731,,,731,,,731,,731,474,,474',
'731,474,474,474,474,474,474,474,731,474,,,,731,731,731,731,731,731,',
',,731,731,,,,,,,731,,,731,,,731,731,52,52,52,,52,,,,52,52,,,,52,,52',
'52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,,52',
'52,52,52,52,,52,52,52,,52,52,,52,52,,465,,,,,,,,,,,,,,,,465,465,,52',
',,52,,,52,,,52,,,465,,465,52,465,465,465,465,,,465,52,465,,,,52,52,52',
'52,52,52,,,,52,52,,,,,,,52,,,52,,,52,52,53,53,53,,53,,,,53,53,,,,53',
',53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53',
',53,53,53,53,53,53,53,53,53,,53,53,,53,53,,460,,,,,,,,,,,,,,,,460,460',
',53,,,53,,,53,,,53,,53,460,,460,53,460,460,460,460,,,,53,,,,,53,53,53',
'53,53,53,,,,53,53,,,,,,,53,,,53,,,53,53,54,54,54,,54,,,,54,54,,,,54',
',54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54',
',54,54,54,54,54,54,54,54,54,,54,54,,54,54,,459,,,,,,,,,,,,,,,,459,459',
',54,,,54,,,54,,,54,,,459,,459,54,459,459,459,459,,,,54,,,,,54,54,54',
'54,54,54,,,,54,54,,,,,,,54,,,54,,,54,54,582,582,582,,582,,,,582,582',
',,,582,,582,582,582,582,582,582,582,,,,,,582,582,582,582,582,582,582',
',,582,,,,,,,582,,,582,582,,582,582,582,582,582,582,582,582,582,,582',
'582,,582,582,,,,,,,,,,,,,,,,,,,,,582,,,582,,,582,,,582,,582,,,,582,',
',,,,,,582,,,,,582,582,582,582,582,582,,,,582,582,,,,,,,582,,,582,,,582',
'582,867,867,867,867,867,,,,867,867,,,,867,,867,867,867,867,867,867,867',
',,,,,867,867,867,867,867,867,867,,,867,,,,,,867,867,,867,867,867,,867',
'867,867,867,867,,867,867,867,,867,867,,867,867,,,,,,,,,,,,,,,,,,,,,867',
',,867,,,867,,,867,,867,,,,867,,,,,,,,867,,,,,867,867,867,867,867,867',
',,,867,867,,,,,,,867,,,867,,,867,867,57,57,57,,57,,,,57,57,,,,57,,57',
'57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,,57',
'57,57,57,57,,57,57,57,,57,57,,57,57,,,,,,,,,,,,,,,,,,,,,57,,,57,,,57',
',,57,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,,,,,,,57,,,57',
',,57,57,58,58,58,,58,,,,58,58,,,,58,,58,58,58,58,58,58,58,,,,,,58,58',
'58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58,58,58,58,58,,58,58,58,,58,58',
',58,58,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,58,,,,,,58,,,,,,,,58,,,,,58',
'58,58,58,58,58,,,,58,58,,,,,,,58,,,58,,,58,58,61,61,61,,61,,,,61,61',
',,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61',
',,61,61,,61,61,61,61,61,,61,61,61,,61,61,,61,61,,,,,,,,,,,,,,,,,,,,',
'61,,,61,,,61,,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61',
',,,,61,61,,,61,,,61,61,62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62',
'62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62,,62,62,62,62,62,',
'62,62,62,,62,62,319,,319,319,319,,319,,,,,,,,,,,,,,,,,62,,,62,,,62,',
',62,,62,,,,319,,319,,,,,,319,319,319,319,,62,62,62,62,62,62,,,,62,62',
',,,,,,62,,,62,,,62,62,63,63,63,,63,,,,63,63,,,,63,,63,63,63,63,63,63',
'63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,,63,63,63,63,63,',
'63,63,63,,63,63,732,,732,732,732,732,732,,,,,,,,,,,,,,63,,,63,,,63,',
',63,,,63,,,,,,732,,,,,,,,732,732,732,732,,63,63,63,63,63,63,,,,63,63',
',,,,,,63,,,63,,,63,63,586,586,586,,586,,,,586,586,,,,586,,586,586,586',
'586,586,586,586,,,,,,586,586,586,586,586,586,586,,,586,,,,,,,586,,,586',
'586,,586,586,586,586,586,,586,586,586,,586,586,,586,586,,,,,,,,,,,,',
',,,,,,,,586,,,586,,,586,,,586,,,,,,586,,,,,,,,586,,,,,586,586,586,586',
'586,586,,,,586,586,,,,,,,586,,,586,,,586,586,866,866,866,,866,,,,866',
'866,,,,866,,866,866,866,866,866,866,866,,,,,,866,866,866,866,866,866',
'866,,,866,,,,,,,866,,,866,866,,866,866,866,866,866,,866,866,866,,866',
'866,,866,866,,,,,,,,,,,,,,,,,,,,,866,,,866,,,866,,,866,,866,,,,866,',
',,,,,,866,,,,,866,866,866,866,866,866,,,,866,866,,,,,,,866,,,866,,,866',
'866,588,588,588,,588,,,,588,588,,,,588,,588,588,588,588,588,588,588',
',,,,,588,588,588,588,588,588,588,,,588,,,,,,,588,,,588,588,,588,588',
'588,588,588,,588,588,588,,588,588,,588,588,,,,,,,,,,,,,,,,,,,,,588,',
',588,,,588,,,588,,,,,,588,,,,,,,,588,,,,,588,588,588,588,588,588,,,',
'588,588,,,,,,,588,,,588,,,588,588,856,856,856,,856,,,,856,856,,,,856',
',856,856,856,856,856,856,856,,,,,,856,856,856,856,856,856,856,,,856',
',,,,,,856,,,856,856,,856,856,856,856,856,,856,856,856,,856,856,56,,56',
'56,56,,56,,,,,,,,,,,,,,,,,856,,,856,,,856,,,856,,,,,,56,56,,,,,,,56',
'56,56,56,,856,856,856,856,856,856,,,,856,856,,,,,,,856,,,856,,,856,856',
'448,448,448,,448,,,,448,448,,,,448,,448,448,448,448,448,448,448,,,,',
',448,448,448,448,448,448,448,,,448,,,,,,,448,,,448,448,,448,448,448',
'448,448,,448,448,448,,448,448,,448,448,,,,,,,,,,,,,,,,,,,,,448,,,448',
',,448,,,448,,,,,,448,,,,,,,,448,,,,,448,448,448,448,448,448,,,,448,448',
',,,,,,448,,,448,,,448,448,447,447,447,,447,,,,447,447,,,,447,,447,447',
'447,447,447,447,447,,,,,,447,447,447,447,447,447,447,,,447,,,,,,,447',
',,447,447,,447,447,447,447,447,,447,447,447,,447,447,,447,447,,,,,,',
',,,,,,,,,,,,,,447,,,447,,,447,,,447,,,,,,447,,,,,,,,447,,,,,447,447',
'447,447,447,447,,,,447,447,,,,,,,447,,,447,,,447,447,446,446,446,,446',
',,,446,446,,,,446,,446,446,446,446,446,446,446,,,,,,446,446,446,446',
'446,446,446,,,446,,,,,,,446,,,446,446,,446,446,446,446,446,,446,446',
'446,,446,446,,446,446,,,,,,,,,,,,,,,,,,,,,446,,,446,,,446,,,446,,,,',
',446,,,,,,,,446,,,,,446,446,446,446,446,446,,,,446,446,,,,,,,446,,,446',
',,446,446,615,615,615,,615,,,,615,615,,,,615,,615,615,615,615,615,615',
'615,,,,,,615,615,615,615,615,615,615,,,615,,,,,,,615,,,615,615,,615',
'615,615,615,615,,615,615,615,,615,615,,615,615,,,,,,,,,,,,,,,,,,,,,615',
',,615,,,615,,,615,,,,,,615,,,,,,,,615,,,,,615,615,615,615,615,615,,',
',615,615,,,,,,,615,,,615,,,615,615,852,852,852,852,852,,,,852,852,,',
',852,,852,852,852,852,852,852,852,,,,,,852,852,852,852,852,852,852,',
',852,,,,,,852,852,,852,852,852,,852,852,852,852,852,,852,852,852,,852',
'852,,852,852,,,,,,,,,,,,,,,,,,,,,852,,,852,,,852,,,852,,852,,,,852,',
',,,,,,852,,,,,852,852,852,852,852,852,,,,852,852,,,,,,,852,,,852,,,852',
'852,99,99,99,99,99,,,,99,99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99',
'99,99,99,99,,,99,,,,,,99,99,99,99,99,99,,99,99,99,99,99,,99,99,99,,99',
'99,,99,99,,,,,,,,,,,,,,,,,,,,,99,,,99,,,99,,,99,,99,,,,99,,,,,,,,99',
',,,,99,99,99,99,99,99,,,,99,99,,,,,,99,99,,,99,,,99,99,103,103,103,',
'103,,,,103,103,,,,103,,103,103,103,103,103,103,103,,,,,,103,103,103',
'103,103,103,103,,,103,,,,,,,103,,,103,103,,103,103,103,103,103,,103',
'103,103,,103,103,,103,103,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,103',
',,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103,,,,103,103,,,,,,,103',
',,103,,,103,103,104,104,104,,104,,,,104,104,,,,104,,104,104,104,104',
'104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104',
',104,104,104,104,104,,104,104,104,,104,104,,104,104,,,,,,,,,,,,,,,,',
',,,,104,,,104,,,104,,,104,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104',
'104,,,,104,104,,,,,,,104,,,104,,,104,104,105,105,105,,105,,,,105,105',
',,,105,,105,105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105',
',,105,,,,,,,105,,,105,105,,105,105,105,105,105,,105,105,105,,105,105',
',105,105,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,105,,,,,,105,,,,,,,,105',
',,,,105,105,105,105,105,105,,,,105,105,,,,,,,105,,,105,,,105,105,106',
'106,106,,106,,,,106,106,,,,106,,106,106,106,106,106,106,106,,,,,,106',
'106,106,106,106,106,106,,,106,,,,,,,106,,,106,106,,106,106,106,106,106',
',106,106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,',
',106,,,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,,,,',
',,106,,,106,,,106,106,107,107,107,107,107,,,,107,107,,,,107,,107,107',
'107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,,107',
'107,,107,107,107,,107,107,107,107,107,,107,107,107,,107,107,,107,107',
',,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,107,,107,,,,107,,,,,,,,107,,,',
',107,107,107,107,107,107,,,,107,107,,,,,,,107,,,107,,,107,107,108,108',
'108,108,108,,,,108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108',
'108,108,108,108,108,108,,,108,,,,,,108,108,108,108,108,108,,108,108',
'108,108,108,,108,108,108,,108,108,,108,108,,,,,,,,,,,,,,,,,,,,,108,',
',108,,,108,,,108,,108,,,,108,,,,,,,,108,,,,,108,108,108,108,108,108',
',,,108,108,,,,,,,108,,,108,,,108,108,843,843,843,,843,,,,843,843,,,',
'843,,843,843,843,843,843,843,843,,,,,,843,843,843,843,843,843,843,,',
'843,,,,,,,843,,,843,843,,843,843,843,843,843,,843,843,843,,843,843,',
'843,843,,,,,,,,,,,,,,,,,,,,,843,,,843,,,843,,,843,,,,,,843,,,,,,,,843',
',,,,843,843,843,843,843,843,,,,843,843,,,,,,,843,,,843,,,843,843,444',
'444,444,,444,,,,444,444,,,,444,,444,444,444,444,444,444,444,,,,,,444',
'444,444,444,444,444,444,,,444,,,,,,,444,,,444,444,,444,444,444,444,444',
'444,444,444,444,,444,444,,444,444,,,,,,,,,,,,,,,,,,,,,444,,,444,,,444',
',,444,,444,,,,444,,,,,,,,444,,,,,444,444,444,444,444,444,,,,444,444',
',,,,,,444,,,444,,,444,444,617,617,617,,617,,,,617,617,,,,617,,617,617',
'617,617,617,617,617,,,,,,617,617,617,617,617,617,617,,,617,,,,,,,617',
',,617,617,,617,617,617,617,617,,617,617,617,,617,617,,617,617,,,,,,',
',,,,,,,,,,,,,,617,,,617,,,617,,,617,,617,,,,617,,,,,,,,617,,,,,617,617',
'617,617,617,617,,,,617,617,,,,,,,617,,,617,,,617,617,195,195,195,195',
'195,,,,195,195,,,,195,,195,195,195,195,195,195,195,,,,,,195,195,195',
'195,195,195,195,,,195,,,,,,195,195,,195,195,195,,195,195,195,195,195',
',195,195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,',
',195,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195,',
',,,,,195,,,195,,,195,195,196,196,196,,196,,,,196,196,,,,196,,196,196',
'196,196,196,196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196',
',,196,196,,196,196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,',
',,,,,,,,,,,,,,196,,,196,,,196,,,196,,196,,,,196,,,,,,,,196,,,,,196,196',
'196,196,196,196,,,,196,196,,,,,,,196,,,196,,,196,196,197,197,197,,197',
',,,197,197,,,,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197',
'197,197,197,,,197,,,,,,,197,,,197,197,,197,197,197,197,197,,197,197',
'197,,197,197,,197,197,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,197,,197',
',,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,,,,,,197,',
',197,,,197,197,198,198,198,,198,,,,198,198,,,,198,,198,198,198,198,198',
'198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,',
'198,198,198,198,198,,198,198,198,,198,198,,198,198,,,,,,,,,,,,,,,,,',
',,,198,,,198,,,198,,,198,,,,,,198,,,,,,,,198,,,,,198,198,198,198,198',
'198,,,,198,198,,,,,,,198,,,198,,,198,198,199,199,199,,199,,,,199,199',
',,,199,,199,199,199,199,199,199,199,,,,,,199,199,199,199,199,199,199',
',,199,,,,,,,199,,,199,199,,199,199,199,199,199,199,199,199,199,,199',
'199,,199,199,,,,,,,,,,,,,,,,,,,,,199,,,199,,,199,,,199,,199,,,,199,',
',,,,,,199,,,,,199,199,199,199,199,199,,,,199,199,,,,,,,199,,,199,,,199',
'199,619,619,619,,619,,,,619,619,,,,619,,619,619,619,619,619,619,619',
',,,,,619,619,619,619,619,619,619,,,619,,,,,,,619,,,619,619,,619,619',
'619,619,619,,619,619,619,,619,619,,619,619,,,,,,,,,,,,,,,,,,,,,619,',
',619,,,619,,,619,,,,,,619,,,,,,,,619,,,,,619,619,619,619,619,619,,,',
'619,619,,,,,,,619,,,619,,,619,619,620,620,620,,620,,,,620,620,,,,620',
',620,620,620,620,620,620,620,,,,,,620,620,620,620,620,620,620,,,620',
',,,,,,620,,,620,620,,620,620,620,620,620,,620,620,620,,620,620,,620',
'620,,,,,,,,,,,,,,,,,,,,,620,,,620,,,620,,,620,,,,,,620,,,,,,,,620,,',
',,620,620,620,620,620,620,,,,620,620,,,,,,,620,,,620,,,620,620,202,202',
'202,,202,,,,202,202,,,,202,,202,202,202,202,202,202,202,,,,,,202,202',
'202,202,202,202,202,,,202,,,,,,,202,,,202,202,,202,202,202,202,202,',
'202,202,202,,202,202,,202,202,,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,',
'202,,,,,,202,,,,,,,,202,,,,,202,202,202,202,202,202,,,,202,202,,,,,',
',202,,,202,,,202,202,203,203,203,,203,,,,203,203,,,,203,,203,203,203',
'203,203,203,203,,,,,,203,203,203,203,203,203,203,,,203,,,,,,,203,,,203',
'203,,203,203,203,203,203,,203,203,203,,203,203,,203,203,,,,,,,,,,,,',
',,,,,,,,203,,,203,,,203,,,203,,,,,,203,,,,,,,,203,,,,,203,203,203,203',
'203,203,,,,203,203,,,,,,,203,,,203,,,203,203,204,204,204,,204,,,,204',
'204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204',
'204,,,204,,,,,,,204,,,204,204,,204,204,204,204,204,,204,204,204,,204',
'204,,204,204,,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,,,204,,,,,,204,,,,',
',,,204,,,,,204,204,204,204,204,204,,,,204,204,,,,,,,204,,,204,,,204',
'204,625,625,625,,625,,,,625,625,,,,625,,625,625,625,625,625,625,625',
',,,,,625,625,625,625,625,625,625,,,625,,,,,,,625,,,625,625,,625,625',
'625,625,625,,625,625,625,,625,625,,625,625,,,,,,,,,,,,,,,,,,,,,625,',
',625,,,625,,,625,,,,,,625,,,,,,,,625,,,,,625,625,625,625,625,625,,,',
'625,625,,,,,,,625,,,625,,,625,625,831,831,831,,831,,,,831,831,,,,831',
',831,831,831,831,831,831,831,,,,,,831,831,831,831,831,831,831,,,831',
',,,,,,831,,,831,831,,831,831,831,831,831,,831,831,831,,831,831,,831',
'831,,,,,,,,,,,,,,,,,,,,,831,,,831,,,831,,,831,,,,,,831,,,,,,,,831,,',
',,831,831,831,831,831,831,,,,831,831,,,,,,,831,,,831,,,831,831,628,628',
'628,,628,,,,628,628,,,,628,,628,628,628,628,628,628,628,,,,,,628,628',
'628,628,628,628,628,,,628,,,,,,,628,,,628,628,,628,628,628,628,628,',
'628,628,628,,628,628,,628,628,,,,,,,,,,,,,,,,,,,,,628,,,628,,,628,,',
'628,,,,,,628,,,,,,,,628,,,,,628,628,628,628,628,628,,,,628,628,,,,,',
',628,,,628,,,628,628,418,418,418,,418,,,,418,418,,,,418,,418,418,418',
'418,418,418,418,,,,,,418,418,418,418,418,418,418,,,418,,,,,,,418,,,418',
'418,,418,418,418,418,418,,418,418,418,,418,418,,418,418,,,,,,,,,,,,',
',,,,,,,,418,,,418,,,418,,,418,,,,,,418,,,,,,,,418,,,,,418,418,418,418',
'418,418,,,,418,418,,,,,,,418,,,418,,,418,418,636,636,636,,636,,,,636',
'636,,,,636,,636,636,636,636,636,636,636,,,,,,636,636,636,636,636,636',
'636,,,636,,,,,,,636,,,636,636,,636,636,636,636,636,,636,636,636,,636',
'636,,636,636,,,,,,,,,,,,,,,,,,,,,636,,,636,,,636,,,636,,,,,,636,,,,',
',,,636,,,,,636,636,636,636,636,636,,,,636,636,,,,,,,636,,,636,,,636',
'636,810,810,810,810,810,,,,810,810,,,,810,,810,810,810,810,810,810,810',
',,,,,810,810,810,810,810,810,810,,,810,,,,,,810,810,,810,810,810,,810',
'810,810,810,810,,810,810,810,,810,810,,810,810,,,,,,,,,,,,,,,,,,,,,810',
',,810,,,810,,,810,,810,,,,810,,,,,,,,810,,,,,810,810,810,810,810,810',
',,,810,810,,,,,,,810,,,810,,,810,810,212,212,212,212,212,,,,212,212',
',,,212,,212,212,212,212,212,212,212,,,,,,212,212,212,212,212,212,212',
',,212,,,,,,212,212,,212,212,212,,212,212,212,212,212,,212,212,212,,212',
'212,,212,212,,,,,,,,,,,,,,,,,,,,,212,,,212,,,212,,,212,,212,,,,212,',
',,,,,,212,,,,,212,212,212,212,212,212,,,,212,212,,,,,,,212,,,212,,,212',
'212,213,213,213,,213,,,,213,213,,,,213,,213,213,213,213,213,213,213',
',,,,,213,213,213,213,213,213,213,,,213,,,,,,,213,,,213,213,,213,213',
'213,213,213,,213,213,213,,213,213,,213,213,,,,,,,,,,,,,,,,,,,,,213,',
',213,,213,213,,,213,,,,,,213,,,,,,,,213,,,,,213,213,213,213,213,213',
',,,213,213,,,,,,,213,,,213,,,213,213,216,216,216,,216,,,,216,216,,,',
'216,,216,216,216,216,216,216,216,,,,,,216,216,216,216,216,216,216,,',
'216,,,,,,,216,,,216,216,,216,216,216,216,216,,216,216,216,,216,216,',
'216,216,,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,,,216,,,,,,216,,,,,,,,216',
',,,,216,216,216,216,216,216,,,,216,216,,,,,,,216,,,216,,,216,216,809',
'809,809,809,809,,,,809,809,,,,809,,809,809,809,809,809,809,809,,,,,',
'809,809,809,809,809,809,809,,,809,,,,,,809,809,,809,809,809,,809,809',
'809,809,809,,809,809,809,,809,809,,809,809,,,,,,,,,,,,,,,,,,,,,809,',
',809,,,809,,,809,,809,,,,809,,,,,,,,809,,,,,809,809,809,809,809,809',
',,,809,809,,,,,,,809,,,809,,,809,809,218,218,218,,218,,,,218,218,,,',
'218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218,218,,',
'218,,,,,,,218,,,218,218,,218,218,218,218,218,,218,218,218,,218,218,',
'218,218,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,218,,,,,,218,,,,,,,,218',
',,,,218,218,218,218,218,218,,,,218,218,,,,,,,218,,,218,,,218,218,219',
'219,219,,219,,,,219,219,,,,219,,219,219,219,219,219,219,219,,,,,,219',
'219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,,219,219,219,219,219',
',219,219,219,,219,219,,219,219,,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,',
',219,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219,219,,,,219,219,,,,',
',,219,,,219,,,219,219,220,220,220,,220,,,,220,220,,,,220,,220,220,220',
'220,220,220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220',
'220,,220,220,220,220,220,,220,220,220,,220,220,,220,220,,,,,,,,,,,,',
',,,,,,,,220,,,220,,,220,,,220,,,,,,220,,,,,,,,220,,,,,220,220,220,220',
'220,220,,,,220,220,,,,,,,220,,,220,,,220,220,221,221,221,,221,,,,221',
'221,,,,221,,221,221,221,221,221,221,221,,,,,,221,221,221,221,221,221',
'221,,,221,,,,,,,221,,,221,221,,221,221,221,221,221,,221,221,221,,221',
'221,,221,221,,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,221,,,,,,221,,,,',
',,,221,,,,,221,221,221,221,221,221,,,,221,221,,,,,,,221,,,221,,,221',
'221,222,222,222,,222,,,,222,222,,,,222,,222,222,222,222,222,222,222',
',,,,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222,222,,222,222',
'222,222,222,,222,222,222,,222,222,,222,222,,,,,,,,,,,,,,,,,,,,,222,',
',222,,,222,,,222,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222,222,,,',
'222,222,,,,,,,222,,,222,,,222,222,223,223,223,,223,,,,223,223,,,,223',
',223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223,223,,,223',
',,,,,,223,,,223,223,,223,223,223,223,223,,223,223,223,,223,223,,223',
'223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,,,223,,,,,,,,223,,',
',,223,223,223,223,223,223,,,,223,223,,,,,,,223,,,223,,,223,223,224,224',
'224,,224,,,,224,224,,,,224,,224,224,224,224,224,224,224,,,,,,224,224',
'224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224,224,224,224,224,',
'224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,',
'224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224,,,,,',
',224,,,224,,,224,224,225,225,225,,225,,,,225,225,,,,225,,225,225,225',
'225,225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225',
'225,,225,225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,,,,,,,',
',,,,,,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225',
'225,225,,,,225,225,,,,,,,225,,,225,,,225,225,226,226,226,,226,,,,226',
'226,,,,226,,226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226',
'226,,,226,,,,,,,226,,,226,226,,226,226,226,226,226,,226,226,226,,226',
'226,,226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,',
',,,226,,,,,226,226,226,226,226,226,,,,226,226,,,,,,,226,,,226,,,226',
'226,227,227,227,,227,,,,227,227,,,,227,,227,227,227,227,227,227,227',
',,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227,,227,227',
'227,227,227,,227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227,',
',227,,,227,,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,',
'227,227,,,,,,,227,,,227,,,227,227,228,228,228,,228,,,,228,228,,,,228',
',228,228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,,228',
',,,,,,228,,,228,228,,228,228,228,228,228,,228,228,228,,228,228,,228',
'228,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,228,,,,,,228,,,,,,,,228,,',
',,228,228,228,228,228,228,,,,228,228,,,,,,,228,,,228,,,228,228,229,229',
'229,,229,,,,229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229',
'229,229,229,229,229,,,229,,,,,,,229,,,229,229,,229,229,229,229,229,',
'229,229,229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,',
'229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,,',
',229,,,229,,,229,229,230,230,230,,230,,,,230,230,,,,230,,230,230,230',
'230,230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230',
'230,,230,230,230,230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,',
',,,,,,,,230,,,230,,,230,,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230',
'230,230,,,,230,230,,,,,,,230,,,230,,,230,230,231,231,231,,231,,,,231',
'231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231,231',
'231,,,231,,,,,,,231,,,231,231,,231,231,231,231,231,,231,231,231,,231',
'231,,231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,231,,,,,,231,,,,',
',,,231,,,,,231,231,231,231,231,231,,,,231,231,,,,,,,231,,,231,,,231',
'231,232,232,232,,232,,,,232,232,,,,232,,232,232,232,232,232,232,232',
',,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,,232,232',
'232,232,232,,232,232,232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,232,',
',232,,,232,,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,,',
'232,232,,,,,,,232,,,232,,,232,232,233,233,233,,233,,,,233,233,,,,233',
',233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233',
',,,,,,233,,,233,233,,233,233,233,233,233,,233,233,233,,233,233,,233',
'233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,233,,,,,,233,,,,,,,,233,,',
',,233,233,233,233,233,233,,,,233,233,,,,,,,233,,,233,,,233,233,234,234',
'234,,234,,,,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234,234',
'234,234,234,234,234,,,234,,,,,,,234,,,234,234,,234,234,234,234,234,',
'234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,',
'234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,,',
',234,,,234,,,234,234,235,235,235,,235,,,,235,235,,,,235,,235,235,235',
'235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235',
'235,,235,235,235,235,235,,235,235,235,,235,235,,235,235,,,,,,,,,,,,',
',,,,,,,,235,,,235,,,235,,,235,,,,,,235,,,,,,,,235,,,,,235,235,235,235',
'235,235,,,,235,235,,,,,,,235,,,235,,,235,235,236,236,236,,236,,,,236',
'236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236,236',
'236,,,236,,,,,,,236,,,236,236,,236,236,236,236,236,,236,236,236,,236',
'236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,236,,,,,,236,,,,',
',,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,,,,236,,,236,,,236',
'236,237,237,237,,237,,,,237,237,,,,237,,237,237,237,237,237,237,237',
',,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,,237,237',
'237,237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,',
',237,,,237,,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,',
'237,237,,,,,,,237,,,237,,,237,237,238,238,238,,238,,,,238,238,,,,238',
',238,238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238',
',,,,,,238,,,238,238,,238,238,238,238,238,,238,238,238,,238,238,,238',
'238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,238,,,,,,238,,,,,,,,238,,',
',,238,238,238,238,238,238,,,,238,238,,,,,,,238,,,238,,,238,238,239,239',
'239,,239,,,,239,239,,,,239,,239,239,239,239,239,239,239,,,,,,239,239',
'239,239,239,239,239,,,239,,,,,,,239,,,239,239,,239,239,239,239,239,',
'239,239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,',
'239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239,,,,,',
',239,,,239,,,239,239,240,240,240,,240,,,,240,240,,,,240,,240,240,240',
'240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240',
'240,,240,240,240,240,240,,240,240,240,,240,240,,240,240,,,,,,,,,,,,',
',,,,,,,,240,,,240,,,240,,,240,,,,,,240,,,,,,,,240,,,,,240,240,240,240',
'240,240,,,,240,240,,,,,,,240,,,240,,,240,240,241,241,241,,241,,,,241',
'241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241,241,241',
'241,,,241,,,,,,,241,,,241,241,,241,241,241,241,241,,241,241,241,,241',
'241,,241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,241,,,,,,241,,,,',
',,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,,,,241,,,241,,,241',
'241,242,242,242,,242,,,,242,242,,,,242,,242,242,242,242,242,242,242',
',,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,,242,242',
'242,242,242,,242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,',
',242,,,242,,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,',
'242,242,,,,,,,242,,,242,,,242,242,243,243,243,,243,,,,243,243,,,,243',
',243,243,243,243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243',
',,,,,,243,,,243,243,,243,243,243,243,243,,243,243,243,,243,243,,243',
'243,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,,243,,,,,,243,,,,,,,,243,,',
',,243,243,243,243,243,243,,,,243,243,,,,,,,243,,,243,,,243,243,378,378',
'378,,378,,,,378,378,,,,378,,378,378,378,378,378,378,378,,,,,,378,378',
'378,378,378,378,378,,,378,,,,,,,378,,,378,378,,378,378,378,378,378,',
'378,378,378,,378,378,,378,378,,,,,,,,,,,,,,,,,,,,,378,,,378,,,378,,',
'378,,,,,,378,,,,,,,,378,,,,,378,378,378,378,378,378,,,,378,378,,,,,',
',378,,,378,,,378,378,807,807,807,,807,,,,807,807,,,,807,,807,807,807',
'807,807,807,807,,,,,,807,807,807,807,807,807,807,,,807,,,,,,,807,,,807',
'807,,807,807,807,807,807,,807,807,807,,807,807,,807,807,,,,,,,,,,,,',
',,,,,,,,807,,,807,,,807,,,807,,,,,,807,,,,,,,,807,,,,,807,807,807,807',
'807,807,,,,807,807,,,,,,,807,,,807,,,807,807,505,505,505,505,505,,,',
'505,505,,,,505,,505,505,505,505,505,505,505,,,,,,505,505,505,505,505',
'505,505,,,505,,,,,,505,505,,505,505,505,,505,505,505,505,505,,505,505',
'505,,505,505,,505,505,,,,,,,,,,,,,,,,,,,,,505,,,505,,,505,,,505,,505',
',,,505,,,,,,,,505,,,,,505,505,505,505,505,505,,,,505,505,,,,,,505,505',
',,505,,,505,505,252,252,252,,252,,,,252,252,,,,252,,252,252,252,252',
'252,252,252,,,,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252,252',
',252,252,252,252,252,,252,252,252,,252,252,,252,252,,,,,,,,,,,,,,,,',
',,,,252,,,252,,,252,,,252,,,,,,252,,,,,,,,252,,,,,252,252,252,252,252',
'252,,,,252,252,,,,,,,252,,,252,,,252,252,788,788,788,788,788,,,,788',
'788,,,,788,,788,788,788,788,788,788,788,,,,,,788,788,788,788,788,788',
'788,,,788,,,,,,788,788,,788,788,788,,788,788,788,788,788,,788,788,788',
',788,788,,788,788,,,,,,,,,,,,,,,,,,,,,788,,,788,,,788,,,788,,788,,,',
'788,,,,,,,,788,,,,,788,788,788,788,788,788,,,,788,788,,,,,,,788,,,788',
',,788,788,254,254,254,,254,,,,254,254,,,,254,,254,254,254,254,254,254',
'254,,,,,,254,254,254,254,254,254,254,,,254,,,,,,,254,,,254,254,,254',
'254,254,254,254,,254,254,254,,254,254,,254,254,,,,,,,,,,,,,,,,,,,,,254',
',,254,,,254,,,254,,,,,,254,,,,,,,,254,,,,,254,254,254,254,254,254,,',
',254,254,,,,,,,254,,,254,,,254,254,259,259,259,,259,,,,259,259,,,,259',
',259,259,259,259,259,259,259,,,,,,259,259,259,259,259,259,259,,,259',
',,,,,,259,,,259,259,,259,259,259,259,259,,259,259,259,,259,259,,259',
'259,,,,,,,,,,,,,,,,,,,,,259,,,259,,,259,,,259,,,,,,259,,,,,,,,259,,',
',,259,259,259,259,259,259,,,,259,259,,,,,,,259,,,259,,,259,259,640,640',
'640,640,640,,,,640,640,,,,640,,640,640,640,640,640,640,640,,,,,,640',
'640,640,640,640,640,640,,,640,,,,,,640,640,,640,640,640,,640,640,640',
'640,640,,640,640,640,,640,640,,640,640,,,,,,,,,,,,,,,,,,,,,640,,,640',
',,640,,,640,,640,,,,640,,,,,,,,640,,,,,640,640,640,640,640,640,,,,640',
'640,,,,,,,640,,,640,,,640,640,644,644,644,,644,,,,644,644,,,,644,,644',
'644,644,644,644,644,644,,,,,,644,644,644,644,644,644,644,,,644,,,,,',
',644,,,644,644,,644,644,644,644,644,,644,644,644,,644,644,,644,644,',
',,,,,,,,,,,,,,,,,,,644,,,644,,,644,,,644,,,,,,644,,,,,,,,644,,,,,644',
'644,644,644,644,644,,,,644,644,,,,,,,644,,,644,,,644,644,651,651,651',
'651,651,,,,651,651,,,,651,,651,651,651,651,651,651,651,,,,,,651,651',
'651,651,651,651,651,,,651,,,,,,651,651,,651,651,651,,651,651,651,651',
'651,,651,651,651,,651,651,,651,651,,,,,,,,,,,,,,,,,,,,,651,,,651,,,651',
',,651,,651,,,,651,,,,,,,,651,,,,,651,651,651,651,651,651,,,,651,651',
',,,,,,651,,,651,,,651,651,265,265,265,,265,,,,265,265,,,,265,,265,265',
'265,265,265,265,265,,,,,,265,265,265,265,265,265,265,,,265,,,,,,,265',
',,265,265,,265,265,265,265,265,265,265,265,265,,265,265,,265,265,,,',
',,,,,,,,,,,,,,,,,265,,,265,,,265,,,265,,265,,265,,265,,,,,,,,265,,,',
',265,265,265,265,265,265,,,,265,265,,,,,,,265,,,265,,,265,265,266,266',
'266,,266,,,,266,266,,,,266,,266,266,266,266,266,266,266,,,,,,266,266',
'266,266,266,266,266,,,266,,,,,,,266,,,266,266,,266,266,266,266,266,266',
'266,266,266,,266,266,,266,266,,,,,,,,,,,,,,,,,,,,,266,,,266,,,266,,',
'266,,266,,266,,266,,,,,,,,266,,,,,266,266,266,266,266,266,,,,266,266',
',,,,,,266,,,266,,,266,266,274,274,274,,274,,,,274,274,,,,274,,274,274',
'274,274,274,274,274,,,,,,274,274,274,274,274,274,274,,,274,,,,,,,274',
',,274,274,,274,274,274,274,274,274,274,274,274,,274,274,,274,274,,,',
',,,,,,,,,,,,,,,,,274,,,274,,274,274,,,274,,274,,274,,274,,,,,,,,274',
',,,,274,274,274,274,274,274,,,,274,274,,,,,,,274,,,274,,,274,274,778',
'778,778,,778,,,,778,778,,,,778,,778,778,778,778,778,778,778,,,,,,778',
'778,778,778,778,778,778,,,778,,,,,,,778,,,778,778,,778,778,778,778,778',
',778,778,778,,778,778,,778,778,,,,,,,,,,,,,,,,,,,,,778,,,778,,,778,',
',778,,778,,,,778,,,,,,,,778,,,,,778,778,778,778,778,778,,,,778,778,',
',,,,,778,,,778,,,778,778,657,657,657,,657,,,,657,657,,,,657,,657,657',
'657,657,657,657,657,,,,,,657,657,657,657,657,657,657,,,657,,,,,,,657',
',,657,657,,657,657,657,657,657,657,657,657,657,,657,657,,657,657,,,',
',,,,,,,,,,,,,,,,,657,,,657,,,657,,,657,,657,,657,,657,,,,,,,,657,,,',
',657,657,657,657,657,657,,,,657,657,,,,,,,657,,,657,,,657,657,763,763',
'763,,763,,,,763,763,,,,763,,763,763,763,763,763,763,763,,,,,,763,763',
'763,763,763,763,763,,,763,,,,,,,763,,,763,763,,763,763,763,763,763,',
'763,763,763,,763,763,,763,763,,,,,,,,,,,,,,,,,,,,,763,,,763,,,763,,',
'763,,,,,,763,,,,,,,,763,,,,,763,763,763,763,763,763,,,,763,763,,,,,',
',763,,,763,,,763,763,278,278,278,278,278,,,,278,278,,,,278,,278,278',
'278,278,278,278,278,,,,,,278,278,278,278,278,278,278,,,278,,,,,,278',
'278,,278,278,278,,278,278,278,278,278,,278,278,278,,278,278,,278,278',
',,,,,,,,,,,,,,,,,,,,278,,,278,,,278,,,278,,278,,,,278,,,,,,,,278,,,',
',278,278,278,278,278,278,,,,278,278,,,,,,,278,,,278,,,278,278,762,762',
'762,,762,,,,762,762,,,,762,,762,762,762,762,762,762,762,,,,,,762,762',
'762,762,762,762,762,,,762,,,,,,,762,,,762,762,,762,762,762,762,762,',
'762,762,762,,762,762,,762,762,,,,,,,,,,,,,,,,,,,,,762,,,762,,,762,,',
'762,,,,,,762,,,,,,,,762,,,,,762,762,762,762,762,762,,,,762,762,,,,,',
',762,,,762,,,762,762,761,761,761,,761,,,,761,761,,,,761,,761,761,761',
'761,761,761,761,,,,,,761,761,761,761,761,761,761,,,761,,,,,,,761,,,761',
'761,,761,761,761,761,761,,761,761,761,,761,761,,761,761,,,,,,,,,,,,',
',,,,,,,,761,,,761,,,761,,,761,,,,,,761,,,,,,,,761,,,,,761,761,761,761',
'761,761,,,,761,761,,,,,,,761,,,761,,,761,761,663,663,663,663,663,,,',
'663,663,,,,663,,663,663,663,663,663,663,663,,,,,,663,663,663,663,663',
'663,663,,,663,,,,,,663,663,,663,663,663,,663,663,663,663,663,,663,663',
'663,,663,663,,663,663,,,,,,,,,,,,,,,,,,,,,663,,,663,,,663,,,663,,663',
',,,663,,,,,,,,663,,,,,663,663,663,663,663,663,,,,663,663,,,,,,,663,',
',663,,,663,663,282,282,282,,282,,,,282,282,,,,282,,282,282,282,282,282',
'282,282,,,,,,282,282,282,282,282,282,282,,,282,,,,,,,282,,,282,282,',
'282,282,282,282,282,,282,282,282,,282,282,881,,881,881,881,881,881,',
',,,,,,,,,,,,,,,282,,,282,,,282,,,282,,,,,,881,881,,,,,,,881,881,881',
'881,,282,282,282,282,282,282,,,,282,282,,,,282,,,282,,,282,,,282,282',
'283,283,283,283,283,,,,283,283,,,,283,,283,283,283,283,283,283,283,',
',,,,283,283,283,283,283,283,283,,,283,,,,,,283,283,,283,283,283,,283',
'283,283,283,283,,283,283,283,,283,283,,283,283,,,,,,,,,,,,,,,,,,,,,283',
',,283,,,283,,,283,,283,,,,283,,,,,,,,283,,,,,283,283,283,283,283,283',
',,,283,283,,,,,,,283,,,283,,,283,283,366,366,366,,366,,,,366,366,,,',
'366,,366,366,366,366,366,366,366,,,,,,366,366,366,366,366,366,366,,',
'366,,,,,,,366,,,366,366,,366,366,366,366,366,,366,366,366,,366,366,824',
',824,824,824,,824,,,,,,,,,,,,,,,,,366,,,366,,,366,,,366,,,,,,824,,,',
',,,,824,824,824,824,,366,366,366,366,366,366,,,,366,366,,,,,,,366,,',
'366,,,366,366,664,664,664,664,664,,,,664,664,,,,664,,664,664,664,664',
'664,664,664,,,,,,664,664,664,664,664,664,664,,,664,,,,,,664,664,,664',
'664,664,,664,664,664,664,664,,664,664,664,,664,664,,664,664,,,,,,,,',
',,,,,,,,,,,,664,,,664,,,664,,,664,,664,,,,664,,,,,,,,664,,,,,664,664',
'664,664,664,664,,,,664,664,,,,,,,664,,,664,,,664,664,668,668,668,,668',
',,,668,668,,,,668,,668,668,668,668,668,668,668,,,,,,668,668,668,668',
'668,668,668,,,668,,,,,,,668,,,668,668,,668,668,668,668,668,,668,668',
'668,,668,668,,,,,,,,,,,,,,,,,,,,,,,,668,,,668,,,668,,,668,,,,,,,,,,',
',,,,,,,,668,668,668,668,668,668,,,,668,668,,,,,,,668,,,668,,,668,668',
'347,347,347,,347,,,,347,347,,,,347,,347,347,347,347,347,347,347,,,,',
',347,347,347,347,347,347,347,,,347,,,,,,,347,,,347,347,,347,347,347',
'347,347,,347,347,347,,347,347,,347,347,,,,,,,,,,,,,,,,,,,,,347,,,347',
',,347,,,347,,,,,,347,,,,,,,,347,,,,,347,347,347,347,347,347,,,,347,347',
',,,,,,347,,,347,,,347,347,346,346,346,,346,,,,346,346,,,,346,,346,346',
'346,346,346,346,346,,,,,,346,346,346,346,346,346,346,,,346,,,,,,,346',
',,346,346,,346,346,346,346,346,,346,346,346,,346,346,,346,346,,,,,,',
',,,,,,,,,,,,,,346,,,346,,,346,,,346,,,,,,346,,,,,,,,346,,,,,346,346',
'346,346,346,346,,,,346,346,,,,,,,346,,,346,,,346,346,678,678,678,,678',
',,,678,678,,,,678,,678,678,678,678,678,678,678,,,,,,678,678,678,678',
'678,678,678,,,678,,,,,,,678,,,678,678,,678,678,678,678,678,,678,678',
'678,,678,678,,,,,,,,,,,,,,,,,,,,,,,,678,,,678,,,678,,,678,,,,,,,,,,',
',,,,,,,,678,678,678,678,678,678,,,,678,678,,,,,,,678,,,678,,,678,678',
'684,684,684,,684,,,,684,684,,,,684,,684,684,684,684,684,684,684,,,,',
',684,684,684,684,684,684,684,,,684,,,,,,,684,,,684,684,,684,684,684',
'684,684,,684,684,684,,684,684,,684,684,,,,,,,,,,,,,,,,,,,,,684,,,684',
',,684,,,684,,684,,,,684,,,,,,,,684,,,,,684,684,684,684,684,684,,,,684',
'684,,,,,,,684,,,684,,,684,684,751,751,751,,751,,,,751,751,,,,751,,751',
'751,751,751,751,751,751,,,,,,751,751,751,751,751,751,751,,,751,,,,,',
',751,,,751,751,,751,751,751,751,751,,751,751,751,,751,751,,751,751,',
',,,,,,,,,,,,,,,,,,,751,,,751,,,751,,,751,,,,,,751,,,,,,,,751,,,,,751',
'751,751,751,751,751,,,,751,751,,,,,,,751,,,751,,,751,751,750,750,750',
',750,,,,750,750,,,,750,,750,750,750,750,750,750,750,,,,,,750,750,750',
'750,750,750,750,,,750,,,,,,,750,,,750,750,,750,750,750,750,750,,750',
'750,750,,750,750,,750,750,,,,,,,,,,,,,,,,,,,,,750,,,750,,,750,,,750',
',,,,,750,,,,,,,,750,,,,,750,750,750,750,750,750,,,,750,750,,,,,,,750',
',,750,,,750,750,295,295,295,,295,,,,295,295,,,,295,,295,295,295,295',
'295,295,295,,,,,,295,295,295,295,295,295,295,,,295,,,,,,,295,,,295,295',
',295,295,295,295,295,,295,295,295,,295,295,,,,,,,,,,,,,,,,,,,,,,,,295',
',,295,,,295,,,295,,,,,,,,,,,,,,,,,,,295,295,295,295,295,295,,,,295,295',
',,,,,,295,,,295,,,295,295,715,715,715,,715,,,,715,715,,,,715,,715,715',
'715,715,715,715,715,,,,,,715,715,715,715,715,715,715,,,715,,,,,,,715',
',,715,715,,715,715,715,715,715,,715,715,715,,715,715,,715,715,,,,,,',
',,,,,,,,,,,,,,715,,,715,,,715,,,715,,715,,,,715,,,,,,,,715,,,,,715,715',
'715,715,715,715,,,,715,715,,,,,,,715,,,715,,,715,715,744,744,744,744',
'744,,,,744,744,,,,744,,744,744,744,744,744,744,744,,,,,,744,744,744',
'744,744,744,744,,,744,,,,,,744,744,,744,744,744,,744,744,744,744,744',
',744,744,744,,744,744,,744,744,,,,,,,,,,,,,,,,,,,,,744,,,744,,,744,',
',744,,744,,,,744,,,,,,,,744,,,,,744,744,744,744,744,744,,,,744,744,',
',,,,,744,,,744,,,744,744,721,721,721,,721,,,,721,721,,,,721,,721,721',
'721,721,721,721,721,,,,,,721,721,721,721,721,721,721,,,721,,,,,,,721',
',,721,721,,721,721,721,721,721,,721,721,721,,721,721,,721,721,,,,,,',
',,,,,,,,,,,,,,721,,,721,,,721,,,721,,,,,,721,,,,,,,,721,,,,,721,721',
'721,721,721,721,,,,721,721,,,,,,,721,,,721,,,721,721,726,726,726,726',
'726,,,,726,726,,,,726,,726,726,726,726,726,726,726,,,,,,726,726,726',
'726,726,726,726,,,726,,,,,,726,726,,726,726,726,,726,726,726,726,726',
',726,726,726,,726,726,,726,726,,,,,,,,,,,,,,,,,,,,,726,,,726,,,726,',
',726,,726,,,,726,,,,,,,,726,,,,,726,726,726,726,726,726,,,,726,726,',
',,,,,726,,,726,,,726,726,738,738,738,,738,,,,738,738,,,,738,,738,738',
'738,738,738,738,738,,,,,,738,738,738,738,738,738,738,,,738,,,,,,,738',
',,738,738,,738,738,738,738,738,,738,738,738,,738,738,,738,738,,,,,,',
',,,,,,,,,,,,,,738,,,738,,,738,,,738,,,,,,738,,,,,,,,738,,,,,738,738',
'738,738,738,738,,,,738,738,,,,,,,738,,,738,,,738,738,304,304,304,,304',
',,,304,304,,,,304,,304,304,304,304,304,304,304,,,,,,304,304,304,304',
'304,304,304,,,304,,,,,,,304,,,304,304,,304,304,304,304,304,,304,304',
'304,,304,304,,304,304,,,,,,,,,,,,,,,,,,,,,304,,,304,304,,304,,,304,',
',,,,304,,,,,,,,304,,,,,304,304,304,304,304,304,,,,304,304,,,,,,,304',
',,304,,,304,304,306,306,306,306,306,,,,306,306,,,,306,,306,306,306,306',
'306,306,306,,,,,,306,306,306,306,306,306,306,,,306,,,,,,306,306,,306',
'306,306,,306,306,306,306,306,,306,306,306,,306,306,,306,306,,,,,,,,',
',,,,,,,,,,,,306,,,306,,,306,,,306,,306,,,,306,,,,,,,,306,,,,,306,306',
'306,306,306,306,,,,306,306,,,,,,,306,,,306,,,306,306,730,730,730,730',
'730,,,,730,730,,,,730,,730,730,730,730,730,730,730,,,,,,730,730,730',
'730,730,730,730,,,730,,,,,,730,730,,730,730,730,,730,730,730,730,730',
',730,730,730,,730,730,,730,730,,,,,,,,,,,,,,,,,,,,,730,,,730,,,730,',
',730,,730,,,,730,,,,,,,,730,,,,,730,730,730,730,730,730,,,,730,730,',
',,,,,730,,,730,,,730,730,511,511,511,,511,,,,511,511,,,,511,,511,511',
'511,511,511,511,511,,,,,,511,511,511,511,511,511,511,,,511,,,,,,,511',
',,511,511,,511,511,511,511,511,,511,511,511,,511,511,,486,,,,,,,486',
'486,486,,,486,486,486,,486,,,,,,511,,,511,486,,511,,,511,,,,,486,486',
',486,486,486,486,486,,,,,,,511,511,511,511,511,511,,,,511,511,,,,,,',
'511,87,,511,,,511,511,87,87,87,486,,87,87,87,,87,486,,,,,486,486,87',
',87,87,87,,,,,,,,87,87,,87,87,87,87,87,486,,,,,,,,,,,,,486,,486,,,486',
',,,,87,87,87,87,87,87,87,87,87,87,87,87,87,87,,,87,87,87,,87,87,,,87',
',,87,,87,,87,,87,,87,87,87,87,87,87,87,,87,,87,,,,,,,,,,,,,87,87,87',
'87,84,87,,87,87,,87,84,84,84,,,84,84,84,,84,,,,,,,,84,,84,84,84,,,,',
',,,84,84,,84,84,84,84,84,,,,,,,,,,,,,,,,,,,,,,,,84,84,84,84,84,84,84',
'84,84,84,84,84,84,84,,,84,84,84,,84,84,,,84,,,84,,84,,84,,84,,84,84',
'84,84,84,84,84,,84,,84,,,,,,,,,,,,,84,84,84,84,434,84,,84,84,,84,434',
'434,434,,,,434,434,,434,,,,,,,,,,,,,,,,,,,,434,434,,434,434,434,434',
'434,,,,,,,,,,,,,,,,,,,,,,,,434,434,434,434,434,434,434,434,434,434,434',
'434,434,434,,,434,434,434,,434,,,,434,,,,,,,434,,434,,434,434,434,434',
'434,434,434,,434,,434,,,,,,,,,,,,,434,434,,434,432,434,,,434,,434,432',
'432,432,,,,432,432,,432,,,,,,,,,432,,,,,,,,,,,432,432,,432,432,432,432',
'432,,,,,,,,,,,,,,,,,,,,,,,,432,432,432,432,432,432,432,432,432,432,432',
'432,432,432,,,432,432,432,,432,,,,432,,,,,,,432,,432,,432,432,432,432',
'432,432,432,,432,432,432,,,,,,,,,,,,,432,432,,432,632,432,,,432,,432',
'632,632,632,,,632,632,632,,632,,,,,,,,,,632,632,,,,,,,,,632,632,,632',
'632,632,632,632,,,,,,,,,,,,,,,,,,,,,,,,632,632,632,632,632,632,632,632',
'632,632,632,632,632,632,,,632,632,632,,632,632,,,632,,,632,,632,,632',
',632,,632,632,632,632,632,632,632,,632,,632,,,,,,,,,,,,,632,632,632',
'632,631,632,,,632,,632,631,631,631,,,631,631,631,,631,,,,,,,,,631,631',
'631,,,,,,,,,631,631,,631,631,631,631,631,,,,,,,,,,,,,,,,,,,,,,,,631',
'631,631,631,631,631,631,631,631,631,631,631,631,631,,,631,631,631,,631',
'631,,,631,,,631,,631,,631,,631,,631,631,631,631,631,631,631,,631,631',
'631,,,,,,,,,,,,,631,631,631,631,436,631,,,631,,631,436,436,436,,,436',
'436,436,,436,,,,,,,,,436,436,436,436,,,,,,,,436,436,,436,436,436,436',
'436,,,,,,,,,,,,,,,,,,,,,,,,436,436,436,436,436,436,436,436,436,436,436',
'436,436,436,,,436,436,436,,,436,,,436,,,436,,436,,436,,436,,436,436',
'436,436,436,436,436,,436,436,436,,,,,,,,,,,,,436,436,436,436,28,436',
',436,436,,,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28,,28',
'28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28',
'28,,28,,28,,,,,,,,,,,,,28,28,28,28,428,28,,,28,,,428,428,428,,,428,428',
'428,,428,,,,,,,,,428,428,428,,,,,,,,,428,428,,428,428,428,428,428,,',
',,,,,,,,,,,,,,,,,,,,,428,428,428,428,428,428,428,428,428,428,428,428',
'428,428,,,428,428,428,,,428,,428,428,,,428,,428,,428,,428,,428,428,428',
'428,428,428,428,,428,428,428,,,,,,,,,,,,,428,428,428,428,27,428,,,428',
',,27,27,27,,,27,27,27,,27,,,,,,,,,27,27,27,,,,,,,,,27,27,,27,27,27,27',
'27,,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27',
',,27,27,27,,,27,,27,27,,,27,,27,,27,,27,,27,27,27,27,27,27,27,,27,27',
'27,,,,,,,,,,,,,27,27,27,27,50,27,,,27,,,50,50,50,,,50,50,50,,50,,,,',
',,,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,,,50',
'50,50,50,50,50,50,50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50',
',50,,50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,437,50',
',50,50,,,437,437,437,,,437,437,437,,437,,,,,,,,,437,437,437,437,,,,',
',,,437,437,,437,437,437,437,437,,,,,,,,,,,,,,,,,,,,,,,,437,437,437,437',
'437,437,437,437,437,437,437,437,437,437,,,437,437,437,,,437,,,437,,',
'437,,437,,437,,437,,437,437,437,437,437,437,437,,437,437,437,,,,,,,',
',,,,,437,437,437,437,489,437,,437,437,,,489,489,489,,,489,489,489,,489',
',,,,,,,,,489,,,,,,,,,,489,489,,489,489,489,489,489,,,,,,575,575,,,575',
',,,,,,,,575,575,,575,575,575,575,575,575,575,,,575,575,,,489,575,575',
'575,575,,,489,,,575,,489,489,,,,575,575,,575,575,575,575,575,575,575',
'575,575,575,575,,,575,489,,,,,,,,,,,,,489,,489,,,489,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,,7,7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,',
',,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,408,408,408,408,408',
'408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408',
'408,408,,,,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408',
'408,408,408,408,408,408,,408,408,,,408,,,,,,,,,408,408,,408,408,408',
'408,408,408,408,,,408,408,,,,408,408,408,408,,,,,,,,,,,,,408,408,,408',
'408,408,408,408,408,408,408,408,408,408,,,408,408,,,,,,,,,,408,412,412',
'412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,,,,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,412,412,412,412,,412,412,,,412,,,,,,,,,412,412,',
'412,412,412,412,412,412,412,,,412,412,,,,412,412,412,412,,,,,,,,,,,',
',412,412,,412,412,412,412,412,412,412,412,412,412,412,,,412,412,,,,',
',,,,,412,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8',
'8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,',
',,,,,8,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,,,,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,,192,192,192,192,192',
',192,,,,,,,192,192,,192,192,192,192,192,192,192,,,192,192,,,,192,192',
'192,192,,,,,,,,,,,,,192,192,,192,192,192,192,192,192,192,192,192,192',
'192,,,192,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741',
'741,741,741,741,741,741,741,741,741,,,,741,741,741,741,741,741,741,741',
'741,741,741,741,741,741,741,741,741,741,741,741,741,,741,741,,,741,',
',,,,,,,741,741,,741,741,741,741,741,741,741,,,741,741,,,,741,741,741',
'741,,,,,,,,,,,,,741,741,,741,741,741,741,741,741,741,741,741,741,741',
',,741,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,,65,65,65,65,65,,65,,,,,,,65,65,,65,65,65,65,65,65,65,,,65,65',
',,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65,65,65,65',
',,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,,79,79,79,79,79,,79,,,,,,,79,79,,79,79,79,79,79,79,79,,,79,79',
',,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,262',
'262,79,,262,,,,,,,,,262,262,,262,262,262,262,262,262,262,,,262,262,',
',,262,262,262,262,,,,,,,,,,,,,262,262,,262,262,262,262,262,262,262,262',
'262,262,262,576,576,262,,576,,,,,,,,,576,576,,576,576,576,576,576,576',
'576,,,576,576,,,,576,576,576,576,,,,,,,,,,,,,576,576,,576,576,576,576',
'576,576,576,576,576,576,576,201,201,576,,201,,,,,,,,,201,201,,201,201',
'201,201,201,201,201,,,201,201,,,,201,201,201,201,,,,,,,,,,,,,201,201',
',201,201,201,201,201,201,201,201,201,201,201,200,200,201,,200,,,,,,',
',,200,200,,200,200,200,200,200,200,200,,,200,200,,,,200,200,200,200',
',,,,,200,,,,,,,200,200,,200,200,200,200,200,200,200,200,200,200,200',
'263,263,200,,263,,,,,,,,,263,263,,263,263,263,263,263,263,263,,,263',
'263,,,,263,263,263,263,,,,,,,,,,,,,263,263,,263,263,263,263,263,263',
'263,263,263,263,263,797,797,263,,797,,,,,,,,,797,797,,797,797,797,797',
'797,797,797,,,797,797,,,,797,797,797,797,,,,,,,,,,,,,797,797,,797,797',
'797,797,797,797,797,797,797,797,797,583,583,797,,583,,,,,,,,,583,583',
',583,583,583,583,583,583,583,,,583,583,,,,583,583,583,583,,,,,,583,',
',,,,,583,583,,583,583,583,583,583,583,583,583,583,583,583,655,655,583',
',655,,,,,,,,,655,655,,655,655,655,655,655,655,655,,,655,655,,,,655,655',
'655,655,,,,,,,,,,,,,655,655,,655,655,655,655,655,655,655,655,655,655',
'655,656,656,655,,656,,,,,,,,,656,656,,656,656,656,656,656,656,656,,',
'656,656,,,,656,656,656,656,,,,,,,,,,,,,656,656,,656,656,656,656,656',
'656,656,656,656,656,656,909,909,656,,909,,,,,,,,,909,909,,909,909,909',
'909,909,909,909,,,909,909,,,,909,909,909,909,,,,,,909,,,,,,,909,909',
',909,909,909,909,909,909,909,909,909,909,909,442,442,909,,442,,,,,,',
',,442,442,,442,442,442,442,442,442,442,,,442,442,,,,442,442,442,442',
',,,,,442,,,,,,,442,442,,442,442,442,442,442,442,442,442,442,442,442',
'443,443,442,,443,,,,,,,,,443,443,,443,443,443,443,443,443,443,,,443',
'443,,,,443,443,443,443,,,,,,,,,,,,,443,443,,443,443,443,443,443,443',
'443,443,443,443,443,526,526,443,,526,,,,,,,,,526,526,,526,526,526,526',
'526,526,526,,,526,526,,,,526,526,526,526,,,,,,,,,,,,,526,526,,526,526',
'526,526,526,526,526,526,526,526,526,525,525,526,,525,,,,,,,,,525,525',
',525,525,525,525,525,525,525,,,525,525,,,,525,525,525,525,,,,,,525,',
',,,,,525,525,,525,525,525,525,525,525,525,525,525,525,525,910,910,525',
',910,,,,,,,,,910,910,,910,910,910,910,910,910,910,,,910,910,,,,910,910',
'910,910,,,,,,,,,,,,,910,910,,910,910,910,910,910,910,910,910,910,910',
'910,515,515,910,,515,,,,,,,,,515,515,,515,515,515,515,515,515,515,,',
'515,515,,,,515,515,515,515,,,,,,,,,,,,,515,515,,515,515,515,515,515',
'515,515,515,515,515,515,514,514,515,,514,,,,,,,,,514,514,,514,514,514',
'514,514,514,514,,,514,514,,,,514,514,514,514,,,,,,514,,,,,,,514,514',
',514,514,514,514,514,514,514,514,514,514,514,581,581,514,,581,,,,,,',
',,581,581,,581,581,581,581,581,581,581,,,581,581,,,,581,581,581,581',
',,,,,,,,,,,,581,581,,581,581,581,581,581,581,581,581,581,581,581,,,581' ]
        racc_action_check = arr = ::Array.new(24790, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1108,   nil,   457,   nil,   805,   992, 22768, 23137,   978,
   947,   944,   991,   128,   591,   728,   nil,  1916,  2053,  1094,
  1024,   nil,  2464,  2601,  2738,   581,   -11, 22252, 21994,   nil,
  3423,  3560,  3697,   nil,   919,    73,   989,   629,  4382,  4519,
  4656,   879,   336,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 22381,   nil,  5204,  5341,  5478,    36,  6997,  5889,  6026,   nil,
   nil,  6163,  6300,  6437,   nil, 23484,   nil,   nil,   nil,   nil,
   nil,   132,   nil,   nil,   nil,   nil,   nil,   864,   854, 23596,
   nil,   nil,   nil,   709, 21220,   nil,   nil, 21091,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   981,   nil,  7807,
   nil,   nil,   nil,  7944,  8081,  8218,  8355,  8492,  8629,   nil,
   397,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 23260,   841,   nil,  9177,  9314,  9451,  9588,  9725,
 23836, 23776, 10136, 10273, 10410,   nil,   421,   310,   885,   193,
   797,   844, 11369, 11506,   nil,   nil, 11643,   829, 11917, 12054,
 12191, 12328, 12465, 12602, 12739, 12876, 13013, 13150, 13287, 13424,
 13561, 13698, 13835, 13972, 14109, 14246, 14383, 14520, 14657, 14794,
 14931, 15068, 15205, 15342,   nil,   nil,   nil,   957,   nil,   786,
   780,   nil, 15890,   814, 16164,   nil,   nil,   nil,   nil, 16301,
   nil,   nil, 23656, 23896,   802, 16849, 16986,   nil,   nil,   nil,
   nil,   nil,   nil,   nil, 17123,   375,   668,   734, 17671,   728,
   727,   688, 18219, 18356,   233,   199,   760,   316,   722,   685,
    29,   nil,   718,   668,   nil, 19726,   nil,   546,   729,   715,
   453,   nil,   712,   nil, 20548,   nil, 20685,   197,   nil,   636,
   -47,   187,   639,   585,   188,   585,   nil,   nil,    43,  6312,
   nil,   nil,   nil,   539,   507,   nil,   500,   380,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  2724,   nil,   nil,   nil,   195,
   nil,   nil,   165,   621,    84,    77, 19041, 18904,   213,   437,
   -22,   -17,   275,    25,    -2,   996,   nil,   nil,    -2,    94,
   nil,   163,   nil,    73,   nil,   nil, 18493,   505,   475,   456,
   338,   277,   203,   287,   444,   nil,   590,   nil, 15479,   nil,
   219,   nil,   248,   nil,   165,   549,   -19,   nil,   566,   -50,
   nil,   254,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   631, 22891,   nil,
   nil,   nil, 23014,   637,   nil,   nil,   409,   nil, 10958,   640,
   nil,   645,   nil,   nil,  1368,   709,   290,   264, 22123,   nil,
   nil,   nil, 21478,   737, 21349,   nil, 21865, 22510,   nil,  2190,
   nil,   nil, 24256, 24316,  8903,   311,  7396,  7259,  7122,   346,
   nil,  3423,  3834,  1121,   850,   809,   843,   844,   866,  5478,
  5341,  2761,  4245,  4519,  4930,  5204,  4656,  4382,  4108,  3286,
  3971,  3012,  1169,  1032,  5067,  4793,   820,   -10,   nil,  1094,
   nil,   957,   nil,   820,   nil,   nil, 21023,   nil,   nil, 22639,
   -38,   nil,   951,   920,   477,   926,  1042,   nil,   nil,   272,
   130,   -40,  1019,   nil,   nil, 15753,  1016,   978,   nil,   nil,
   962, 20959,   979,   135, 24616, 24556,   418,   963,   nil,   nil,
   922,   nil,   409,   546,   683, 24436, 24376,  1642,  1231,  1032,
   994,   910,   nil,   nil,  1505,   nil,   nil,  2190,   nil,   nil,
   nil,   nil,  2875,  3012,   891,   nil,   625,   nil,   nil,  3149,
  3572,   nil,    -8,   nil,   nil,   879,   nil,  2753,   nil,   836,
  1491,   nil,   nil,  3286,   950,   nil,   nil,  3834,   219,    47,
   940,   946,  3971,   nil,  4930, 22637, 23716,    34,   nil,   409,
   nil, 24676,  5615, 24016,   nil,   nil,  6574,   292,  6848,   nil,
  3709,   nil,   nil,   nil,   231,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -35,   nil,   nil,   nil,   738,
   nil,   nil,   nil,   nil,   nil,  7533,   708,  9040,   -53,  9862,
  9999,   709,   nil,   nil,   nil, 10547,   699,   nil, 10821,   213,
   222, 21736, 21607,   652,   546,   nil, 11095,   nil,  3161,   nil,
 16438,   468,   nil,   505, 16575,   nil,   nil,   nil,   nil,   nil,
   nil, 16712,   nil,   313,   293, 24076, 24136, 17397,   683,    57,
   nil,   nil,    72, 18082, 18630,   nil,   531,   -80, 18767,   -89,
   nil,   -28,   135,    43,    43,   207,   315,    86, 19178,  1231,
   162,   168,   343,   285, 19315,   nil,   nil,    23,   347,   466,
   nil,   nil,   356,   nil,   374,   412,   466,   402,   408,   nil,
   nil,   497,  2861,   nil,   422,   nil,   592,   nil,   nil,   nil,
   nil,   nil,   600,   nil,   603, 19863,   543,     0,    14,    16,
    53, 20137,   546,   nil,   630,   633, 20274,   414,   nil,   220,
 20822,  5067,  6449,   -61,   646,   648,   649,   nil, 20411,   645,
   nil, 23372,   703,   775, 20000,   nil,   nil,   nil,  1505,   676,
 19589, 19452,   nil,  2601,   nil,  1779,   nil,   nil,  2327,   nil,
  2464, 17945, 17808, 17534,   108,  2053,   nil,   748,   848,   nil,
   nil,   751,   nil,   nil,   774,   776,   614,   843, 17260,   nil,
   768,   874,   758,   387,   nil,   nil,   893,   nil, 16027,   777,
   819,   nil,   nil,   nil,   nil,   nil,   nil, 23956,   nil,   899,
   nil,   nil,   nil,   nil,  1354,   904,   nil, 15616,   907, 11780,
 11232,   nil,   nil,   112,   -18,   135,   nil,   932,   nil,   nil,
   933,   936,   824,   nil, 18505,   nil,   987,   nil,   nil,   596,
   nil, 10684,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   853,
   838,   nil,  1916,  8766,   nil,   nil,   nil,   880,   845,   nil,
   nil,   nil,  7670,   nil,   nil,     0,  6985,   nil,   894,   857,
   nil,   nil,    85,   nil,   985,   991,  6711,  5752,   nil,   nil,
  4793,   nil,   nil,   916,   889,  -102,   nil,   895,   900,   nil,
   nil, 18231,   nil,   nil,   nil,  4245,   nil,  4108,   274,   269,
   993,   186,   nil,   nil,  2327,   nil,   nil,   nil,   629,  1779,
  1059,   nil,   762,   nil,   nil,   nil,  1642,  1070,  1368, 24196,
 24496,   300,   545,   nil,   nil,   nil,  1083,   nil,   965,  1092,
   nil,  1008,    93,    -7,    92,   549,   nil,   nil,   nil,   nil,
   507 ]

racc_action_default = [
    -3,  -530,    -1,  -518,    -4,    -6,  -530,  -530,  -530,  -530,
  -530,  -530,  -530,  -530,  -268,   -36,   -37,  -530,  -530,   -42,
   -44,   -45,  -279,  -317,  -318,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -530,  -445,  -530,  -530,  -530,  -530,
  -530,  -520,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -508,  -270,  -530,  -529,  -500,  -287,  -529,  -530,  -530,  -292,
  -295,  -518,  -530,  -530,  -309,  -530,  -319,  -320,  -388,  -389,
  -390,  -391,  -392,  -529,  -395,  -529,  -529,  -529,  -529,  -529,
  -422,  -428,  -429,  -530,  -506,  -435,  -436,  -507,  -438,  -439,
  -440,  -441,  -442,  -443,  -444,  -447,  -448,  -530,    -2,  -519,
  -525,  -526,  -527,  -530,  -530,  -530,  -530,  -530,    -3,   -13,
  -530,  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,
  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,
  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,
  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,
  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,
  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,
  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,
  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,
  -181,  -182,  -530,   -18,  -107,   -10,  -530,  -530,  -530,  -529,
  -530,  -530,  -530,  -530,  -530,   -40,  -530,  -445,  -530,  -268,
  -530,  -530,   -10,  -530,   -41,  -218,  -530,  -530,  -530,  -530,
  -530,  -530,  -530,  -530,  -530,  -530,  -530,  -530,  -530,  -530,
  -530,  -530,  -530,  -530,  -530,  -530,  -530,  -530,  -530,  -530,
  -530,  -530,  -530,  -530,  -359,  -361,   -46,  -227,  -239,  -253,
  -253,  -243,  -530,  -254,  -530,  -279,  -317,  -318,  -502,  -530,
   -47,   -48,  -530,  -530,   -53,  -529,  -530,  -286,  -364,  -371,
  -373,   -59,  -369,   -60,  -530,  -518,   -11,   -61,   -10,  -530,
  -530,   -66,   -69,   -10,   -80,  -530,  -530,   -87,  -282,  -520,
  -530,  -321,  -370,  -530,   -71,  -530,   -76,  -275,  -430,  -431,
  -530,  -203,  -204,  -219,  -530,  -521,   -10,  -520,  -228,  -520,
  -522,  -522,  -530,  -530,  -522,  -530,  -288,  -289,  -530,  -530,
  -332,  -333,  -340,  -529,  -466,  -347,  -529,  -529,  -358,  -465,
  -467,  -468,  -469,  -470,  -471,  -530,  -484,  -489,  -490,  -492,
  -493,  -494,  -530,   -43,  -530,  -530,  -530,  -530,  -518,  -530,
  -519,  -445,  -530,  -530,  -268,  -530,  -473,  -474,   -96,  -530,
   -98,  -530,  -268,  -530,  -306,  -445,  -530,  -100,  -101,  -138,
  -139,  -155,  -160,  -167,  -170,  -312,  -530,  -498,  -530,  -393,
  -530,  -408,  -530,  -410,  -530,  -530,  -530,  -400,  -530,  -530,
  -406,  -530,  -421,  -423,  -424,  -425,  -426,  -432,  -433,   931,
    -5,  -528,   -19,   -20,   -21,   -22,   -23,  -530,  -530,   -15,
   -16,   -17,  -530,  -530,   -25,   -33,  -183,  -254,  -530,  -530,
   -26,   -34,   -35,   -27,  -185,  -530,  -509,  -510,  -246,  -366,
  -511,  -512,  -509,  -246,  -510,  -368,  -511,  -512,   -32,  -192,
   -38,   -39,  -530,  -530,  -529,  -275,  -530,  -530,  -530,  -530,
  -285,  -193,  -194,  -195,  -196,  -197,  -198,  -199,  -200,  -205,
  -206,  -207,  -208,  -209,  -210,  -211,  -212,  -213,  -214,  -215,
  -216,  -217,  -220,  -221,  -222,  -223,  -530,  -529,  -240,  -530,
  -241,  -530,  -251,  -530,  -255,  -505,  -246,  -509,  -510,  -246,
  -529,   -54,  -530,  -520,  -520,  -253,  -239,  -247,  -248,  -530,
  -529,  -529,  -530,  -281,    -9,  -519,  -530,   -62,  -273,   -77,
   -67,  -530,  -530,  -529,  -530,  -530,   -86,  -530,  -430,  -431,
   -73,   -78,  -530,  -530,  -530,  -530,  -530,  -224,  -530,  -380,
  -530,  -530,  -229,  -230,  -524,  -523,  -232,  -524,  -277,  -278,
  -501,  -329,   -10,   -10,  -530,  -331,  -530,  -349,  -356,  -530,
  -353,  -354,  -530,  -357,  -466,  -530,  -475,  -530,  -477,  -479,
  -483,  -491,  -495,   -10,  -322,  -323,  -324,   -10,  -530,  -530,
  -530,  -530,   -10,  -375,  -529,  -530,  -530,  -275,  -301,   -96,
   -97,  -530,  -529,  -530,  -304,  -449,  -530,  -530,  -530,  -310,
  -464,  -314,  -516,  -517,  -520,  -394,  -409,  -412,  -413,  -415,
  -396,  -411,  -397,  -398,  -399,  -530,  -402,  -404,  -405,  -530,
  -427,    -7,   -14,  -108,   -24,  -530,  -260,  -530,  -276,  -530,
  -530,   -55,  -237,  -238,  -365,  -530,   -57,  -367,  -530,  -509,
  -510,  -509,  -510,  -530,  -183,  -284,  -530,  -343,  -530,  -345,
   -10,  -253,  -252,  -256,  -530,  -503,  -504,   -50,  -362,   -51,
  -363,   -10,  -233,  -530,  -530,  -530,  -530,  -530,   -42,  -530,
  -245,  -249,  -530,   -10,   -10,  -280,   -12,   -62,  -530,   -70,
   -75,  -530,  -509,  -510,  -529,  -513,   -85,  -530,  -530,  -191,
  -201,  -202,  -530,  -529,  -529,  -271,  -272,  -522,  -530,  -530,
  -330,  -341,  -530,  -348,  -529,  -342,  -530,  -529,  -529,  -485,
  -472,  -530,  -530,  -482,  -529,  -325,  -529,  -293,  -326,  -327,
  -328,  -296,  -530,  -299,  -530,  -530,  -530,  -509,  -510,  -513,
  -274,  -530,   -96,   -99,  -513,  -530,   -10,  -530,  -451,  -530,
   -10,   -10,  -464,  -530,  -497,  -497,  -497,  -461,  -462,  -466,
  -487,  -530,  -530,  -530,   -10,  -401,  -403,  -407,  -184,  -258,
  -530,  -530,   -29,  -187,   -30,  -188,   -56,   -31,  -189,   -58,
  -190,  -530,  -530,  -530,  -276,  -225,  -344,  -530,  -530,  -242,
  -257,  -530,  -234,  -235,  -529,  -529,  -520,  -530,  -530,  -250,
  -530,  -530,   -68,   -81,   -79,  -283,  -529,  -338,   -10,  -381,
  -529,  -382,  -383,  -231,  -334,  -335,  -355,  -530,  -275,  -530,
  -351,  -352,  -476,  -478,  -481,  -530,  -336,  -530,  -530,   -10,
   -10,  -298,  -300,  -530,  -276,  -530,  -276,  -530,  -450,  -307,
  -530,  -530,  -520,  -453,  -530,  -457,  -530,  -459,  -460,  -530,
  -463,  -530,  -315,  -499,  -414,  -417,  -418,  -419,  -420,  -530,
  -259,   -28,  -186,  -530,  -346,  -360,   -52,  -530,  -253,  -372,
  -374,    -8,   -10,  -387,  -339,  -530,  -530,  -385,  -274,  -529,
  -480,  -290,  -530,  -291,  -530,  -530,  -530,   -10,  -302,  -305,
   -10,  -311,  -313,  -530,  -497,  -497,  -496,  -497,  -530,  -488,
  -486,  -464,  -416,  -236,  -244,  -530,  -386,   -10,   -88,  -530,
  -530,   -95,  -384,  -350,   -10,  -294,  -297,  -256,  -529,   -10,
  -530,  -452,  -530,  -455,  -456,  -458,   -10,  -380,  -529,  -530,
  -530,   -94,  -529,  -376,  -377,  -378,  -530,  -308,  -497,  -530,
  -379,  -530,  -509,  -510,  -513,   -93,  -337,  -303,  -454,  -316,
   -89 ]

clist = [
'13,480,556,249,249,249,114,114,312,291,291,375,102,281,494,530,571,206',
'206,415,422,5,206,206,206,393,12,683,328,320,13,285,285,344,345,520',
'214,348,734,304,291,291,363,563,567,248,248,248,109,194,699,294,206',
'206,117,117,12,206,206,35,491,206,352,361,114,731,691,99,428,433,102',
'580,642,805,642,2,309,277,114,402,403,404,405,533,536,648,555,540,650',
'35,284,284,660,707,711,264,271,273,548,13,786,551,553,206,206,206,206',
'13,13,879,596,98,645,640,279,662,606,306,346,737,5,351,365,808,365,12',
'651,809,406,5,486,489,347,12,12,810,663,664,393,721,899,726,588,250',
'250,250,870,366,694,268,272,730,698,590,425,382,384,741,35,391,881,280',
'318,541,355,697,35,35,645,349,317,316,313,377,497,314,591,419,419,477',
'734,500,501,407,913,879,246,260,261,715,790,114,736,855,379,13,206,206',
'206,206,437,380,206,206,206,584,386,605,376,389,834,743,13,206,414,420',
'423,744,822,874,438,12,309,408,556,357,193,703,851,803,400,1,,,,,,712',
'12,,,,,,,,495,249,,,642,669,,,35,249,,,,,291,737,,,,206,206,,,,,35,',
'291,206,,,521,13,,,926,285,13,102,,,517,496,248,,328,544,723,,285,,248',
',,,510,,,12,531,13,532,701,12,428,433,,,,914,,,,691,,,568,569,699,277',
'413,,,734,277,,12,,736,746,,35,10,505,868,284,35,280,291,589,206,206',
',,,,,876,284,876,906,102,876,,,,506,,,35,361,512,10,556,,,585,648,650',
'825,827,828,206,,,,674,504,,,250,250,,,,,769,674,,250,,,,633,356,859',
',,,920,776,114,782,280,737,114,,268,280,272,,756,,,,,759,,,365,875,',
'877,493,498,876,,14,,817,,10,502,820,821,,437,674,206,10,10,,,612,,674',
',613,,117,570,,,117,793,,,14,287,287,,309,671,796,,860,800,801,,,,,642',
',,,,736,,,,,,291,,653,654,521,,354,362,621,,206,,,626,,918,13,,791,',
',,285,867,206,437,903,904,,905,,,,,774,775,437,666,291,206,716,,12,14',
'10,,,309,725,,,14,14,13,13,,,,,,695,10,623,,,887,647,627,,649,928,,894',
'727,13,35,915,,13,12,12,284,,13,,206,437,,708,708,900,437,,206,,,,206',
',206,12,,,742,12,,,728,309,12,884,641,35,35,,,309,,,365,623,328,767',
'623,,,919,10,,,206,206,10,35,,,206,35,,14,,,35,,,893,,,752,754,,13,',
',757,10,14,291,,,,521,13,,,,687,291,206,,,784,,,13,13,419,12,,285,,',
',,688,689,,,12,285,,777,,,,,,,832,,12,12,,,,704,,813,815,706,35,,,,714',
',,,,,,35,14,,,,287,14,,,,,206,35,35,,,13,284,287,,13,13,,,,,818,284',
'819,14,114,321,823,,13,,,,,,,206,12,,,,12,12,381,848,383,383,387,390',
'383,,,,,841,12,768,,,847,,,674,641,,,,771,862,,35,,,13,35,35,,,,780',
'781,437,623,,362,627,,,35,,,,206,,13,13,,,,12,,,,,,873,,,,708,,,,,,',
',,,291,12,12,,,,,,,10,,,,35,,,,,13,,,,889,,,,,,,921,,,,13,35,35,13,',
',,,839,,,12,,10,10,,,,,,13,,,,,,12,13,,12,623,623,13,,10,,,,10,13,,206',
'437,10,35,,12,,888,,,,854,12,,,,,12,35,,,35,,309,12,,,,,,14,,864,865',
',,287,,35,,,,492,,,35,,,,,35,,,,,,,35,,,,,,,,,,14,14,,10,,,,362,886',
',,,,,10,,,,,,,14,,898,,14,10,10,,,14,,,547,,,547,547,,,,,,907,,,,,,',
'912,,,,,916,,,,,,,,,,,,,,,,,,,,215,,,,247,247,247,,,,,,,,10,,,,10,10',
'301,302,303,14,,,,,,,,,10,,14,247,247,,,,,,,,,,14,14,,,,287,,,,,,,,',
',287,,622,,,,,,,,,,,,,10,,,,,,,,,,,,,,,,,,,,,10,10,,,,,,,,,,,14,,,637',
'14,14,,,,,,,622,,,622,637,838,14,,,,,,,,637,637,,,,10,,,,892,,,,,,,',
',,,10,,,10,,,,,,,,,,,,,14,,,,10,,,416,247,424,247,10,,439,,,10,315,',
',,14,14,10,,,,215,,451,452,453,454,455,456,457,458,459,460,461,462,463',
'464,465,466,467,468,469,470,471,472,473,474,475,476,,,,,,,,,247,14,247',
',,891,,247,,,,,,247,247,,14,,,14,,,247,,,,,,,,,,,,,,14,,,,,,,14,,,,',
'14,,,,527,,,14,,,,,,,,,,,,,,,,,,,,622,,,,,,,,,787,792,,,,,,,,,,547,417',
'421,547,547,,,,,,787,,787,,,,,,,,,,,,,205,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,290,290,,482,,484,307,290,290,290,485,343,343,,,343,,247,,,,,,290',
',,622,622,,,,290,290,,,,,,853,,,,857,247,,439,634,424,,,,,,,,,,343,343',
'343,343,,,,,,,,,,,,,,,,,,247,,247,,247,,,,,,,,,,,,,,,,658,,,,,,,,,,',
',,547,247,,,,,,,,,679,680,681,,,,,,,,,,247,,,247,,,,,,,,,,,,,,787,,',
',,,,440,441,,,,,,787,,,449,,616,,,,247,,,,,,,,247,,,,290,,290,290,290',
'290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290',
'290,290,290,290,290,290,,748,,247,,753,755,,290,,290,758,,,760,290,',
'643,,315,,646,765,,,,,,,,247,,,,,,,659,290,,,,,247,,,,,,,,290,,,,,,',
',,290,,,,,,,,,,247,,643,,,315,,,,,,,,,,,,343,343,,,,,,,,,,,,,247,,,',
',,,,,,,,,,,,,,594,,,290,,247,,,,,,,,,,,,247,842,,,,,,,,,,753,755,758',
',,,,,749,,,,,,,,,247,,,,,,,,,,290,,,,,,,,770,,,,,,,,,,,,,643,,,,,,,290',
'290,290,,,,,,,,,,,,,247,,,,,789,,,,,,,842,,,,,,290,,290,,290,307,,,',
',,,,,,,,247,417,,,,,,,,,,,,,,290,,682,,247,,,,,830,,290,290,290,,,,',
',,,840,,290,,,290,247,,,,,,,,,,,290,,,,,,,,,,,417,,,,,,,,,,,343,,729',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,880,,290,,290,,,,,,,,,,,290,',
',,,,,,290,,,,,,,,290,,,,897,,,,,,,,,,,,,,,,,,,897,290,,,,,,,,,,290,',
',,,,290,,,,,,,,,,,,,,,,,,,,,,343,,,,,,,,,290,,,,,,,,,,,,,,,,,,,,,,,290',
',,,,,,,,,,,290,,,,,,,,,,,290,290,290,,,,,,,,,,,,,,,290,,,,,,,,,,,,,',
'343,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,290,,,,,,,,,,,,290,,,,,,,',
',,,,,290,,,,,,,,,,290,,,,,,,,,,,,,,,,,,,290' ]
        racc_goto_table = arr = ::Array.new(2288, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,59,136,54,54,54,48,48,22,52,52,47,81,41,32,8,78,21,21,24,24,7,21',
'21,21,47,20,10,105,102,21,21,21,16,16,43,18,16,108,51,52,52,46,75,75',
'29,29,29,14,14,138,42,21,21,50,50,20,21,21,44,35,21,21,21,48,82,104',
'6,33,33,81,45,60,76,60,2,29,38,48,16,16,16,16,55,55,58,139,55,58,44',
'44,44,60,77,77,34,34,34,107,21,11,107,107,21,21,21,21,21,21,142,127',
'4,145,36,39,61,127,85,86,106,7,44,44,11,44,20,36,87,7,7,33,33,88,20',
'20,89,36,36,47,90,91,92,93,56,56,56,94,95,109,57,57,96,109,97,22,124',
'124,98,44,124,99,9,100,101,79,103,44,44,145,4,74,72,71,70,62,56,84,54',
'54,111,108,113,114,2,115,142,31,31,31,116,117,48,109,118,122,21,21,21',
'21,21,48,123,21,21,21,80,125,126,83,128,129,130,21,21,18,18,18,131,133',
'134,18,20,29,27,136,19,15,136,12,140,5,1,,,,,,78,20,,,,,,,,54,54,,,60',
'43,,,44,54,,,,,52,106,,,,21,21,,,,,44,,52,21,,,41,21,,,76,21,21,81,',
',51,29,29,,105,102,45,,21,,29,,,,42,,,20,51,21,51,139,20,33,33,,,,11',
',,,104,,,16,16,138,38,9,,,108,38,,20,,109,127,,44,17,6,77,44,44,9,52',
'46,21,21,,,,,,106,44,106,82,81,106,,,,39,,,44,21,39,17,136,,,81,58,58',
'135,135,135,21,,,,33,4,,,56,56,,,,,59,33,,56,,,,22,17,109,,,,10,32,48',
'43,9,106,48,,57,9,57,,35,,,,,35,,,44,109,,109,31,31,106,,23,,8,,17,31',
'8,8,,48,33,21,17,17,,,14,,33,,14,,50,4,,,50,55,,,23,23,23,,29,22,107',
',136,107,107,,,,,60,,,,,109,,,,,,52,,51,51,41,,23,23,34,,21,,,34,,109',
'21,,24,,,,21,75,21,48,135,135,,135,,,,,33,33,48,7,52,21,22,,20,23,17',
',,29,22,,,23,23,21,21,,,,,,21,17,57,,,75,34,57,,34,135,,75,16,21,44',
'78,,21,20,20,44,,21,,21,48,,81,81,8,48,,21,,,,21,,21,20,,,51,20,,,81',
'29,20,59,56,44,44,,,29,,,44,57,105,102,57,,,8,17,,,21,21,17,44,,,21',
'44,,23,,,44,,,107,,,18,18,,21,,,18,17,23,52,,,,41,21,,,,56,52,21,,,41',
',,21,21,54,20,,21,,,,,9,9,,,20,21,,29,,,,,,,47,,20,20,,,,9,,54,16,9',
'44,,,,9,,,,,,,44,23,,,,23,23,,,,,21,44,44,,,21,44,23,,21,21,,,,,81,44',
'81,23,48,53,81,,21,,,,,,,21,20,,,,20,20,53,54,53,53,53,53,53,,,,,18',
'20,9,,,51,,,33,56,,,,9,16,,44,,,21,44,44,,,,9,9,48,57,,23,57,,,44,,',
',21,,21,21,,,,20,,,,,,51,,,,81,,,,,,,,,,52,20,20,,,,,,,17,,,,44,,,,',
'21,,,,21,,,,,,,22,,,,21,44,44,21,,,,,9,,,20,,17,17,,,,,,21,,,,,,20,21',
',20,57,57,21,,17,,,,17,21,,21,48,17,44,,20,,44,,,,9,20,,,,,20,44,,,44',
',29,20,,,,,,23,,9,9,,,23,,44,,,,53,,,44,,,,,44,,,,,,,44,,,,,,,,,,23',
'23,,17,,,,23,9,,,,,,17,,,,,,,23,,9,,23,17,17,,,23,,,53,,,53,53,,,,,',
'9,,,,,,,9,,,,,9,,,,,,,,,,,,,,,,,,,,28,,,,28,28,28,,,,,,,,17,,,,17,17',
'28,28,28,23,,,,,,,,,17,,23,28,28,,,,,,,,,,23,23,,,,23,,,,,,,,,,23,,53',
',,,,,,,,,,,,17,,,,,,,,,,,,,,,,,,,,,17,17,,,,,,,,,,,23,,,53,23,23,,,',
',,,53,,,53,53,23,23,,,,,,,,53,53,,,,17,,,,17,,,,,,,,,,,17,,,17,,,,,',
',,,,,,,23,,,,17,,,28,28,28,28,17,,28,,,17,25,,,,23,23,17,,,,28,,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,,,,,,,,,28,23,28,,,23,,28,,,,,,28,28,,23,,,23,,,28,,,,,,,,,,,,,,23',
',,,,,,23,,,,,23,,,,28,,,23,,,,,,,,,,,,,,,,,,,,53,,,,,,,,,53,53,,,,,',
',,,,53,25,25,53,53,,,,,,53,,53,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,37,37,,25,,25,26,37,37,37,25,26,26,,,26,,28,,,,,,37,,,53,53,,',
',37,37,,,,,,53,,,,53,28,,28,28,28,,,,,,,,,,26,26,26,26,,,,,,,,,,,,,',
',,,,28,,28,,28,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,53,28,,,,,,,,,28,28,28',
',,,,,,,,,28,,,28,,,,,,,,,,,,,,53,,,,,,,26,26,,,,,,53,,,26,,25,,,,28',
',,,,,,,28,,,,37,,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,,28,,28,,28,28,,37,,37,28,,,28,37,,25,,25',
',25,28,,,,,,,,28,,,,,,,25,37,,,,,28,,,,,,,,37,,,,,,,,,37,,,,,,,,,,28',
',25,,,25,,,,,,,,,,,,26,26,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,26,,,37,,28',
',,,,,,,,,,,28,28,,,,,,,,,,28,28,28,,,,,,25,,,,,,,,,28,,,,,,,,,,37,,',
',,,,,25,,,,,,,,,,,,,25,,,,,,,37,37,37,,,,,,,,,,,,,28,,,,,25,,,,,,,28',
',,,,,37,,37,,37,26,,,,,,,,,,,,28,25,,,,,,,,,,,,,,37,,26,,28,,,,,25,',
'37,37,37,,,,,,,,25,,37,,,37,28,,,,,,,,,,,37,,,,,,,,,,,25,,,,,,,,,,,26',
',26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,37,,37,,,,,,,,,,,37,',
',,,,,,37,,,,,,,,37,,,,25,,,,,,,,,,,,,,,,,,,25,37,,,,,,,,,,37,,,,,,37',
',,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,',
',,,37,,,,,,,,,,,37,37,37,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,26,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,37,,,,,,,,',
',37,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2288, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   231,    75,   nil,   108,   131,    64,    21,  -291,   131,
  -502,  -583,  -558,   nil,    41,   218,   -24,   338,    18,   163,
    26,     0,   -45,   433,  -177,  1184,  1387,   114,  1032,    23,
   nil,   164,  -251,  -132,    69,  -204,  -364,  1402,    47,    84,
   nil,   -18,    19,  -260,    59,  -288,   -21,   -54,    -1,   nil,
    47,    -2,   -22,   685,   -19,  -227,   121,   123,  -401,  -249,
  -407,  -384,   -92,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   108,   118,   116,   nil,   114,  -301,  -631,  -475,  -333,   102,
  -158,     9,  -525,   143,  -200,    66,    59,  -580,    72,  -576,
  -439,  -728,  -443,  -222,  -673,    83,  -438,  -222,  -434,  -672,
   106,  -155,   -27,  -385,  -480,   -28,  -471,  -225,  -552,  -398,
   nil,   -65,   nil,   -88,   -88,  -714,  -384,  -494,  -597,   nil,
   nil,   nil,   123,   128,    80,   129,  -179,  -270,   131,  -533,
  -387,  -382,   nil,  -514,  -605,  -359,  -333,   nil,  -500,  -249,
  -473,   nil,  -717,   nil,   nil,  -369 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   350,   276,   nil,   529,
   nil,   806,   nil,   275,   nil,   nil,   nil,   210,    16,    11,
   211,   300,   nil,   209,   nil,   253,    15,   nil,    19,    20,
    21,   nil,    25,   677,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   207,   360,   nil,   116,   431,   115,
    69,   nil,    42,   308,   310,   nil,   311,   429,   624,   478,
   251,   nil,   nil,   266,    43,    44,    45,    46,    47,    48,
    49,   nil,   267,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   564,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   323,   322,   693,   325,   nil,   326,   327,
   245,   nil,   435,   nil,   nil,   nil,   nil,   nil,   nil,    68,
    70,    71,    72,   nil,   nil,   nil,   nil,   601,   nil,   nil,
   nil,   nil,   392,   733,   735,   nil,   334,   329,   336,   nil,
   558,   559,   740,   339,   342,   258 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_none,
  2, 141, :_reduce_2,
  0, 142, :_reduce_3,
  1, 142, :_reduce_4,
  3, 142, :_reduce_5,
  1, 144, :_reduce_none,
  4, 144, :_reduce_7,
  4, 147, :_reduce_8,
  2, 148, :_reduce_9,
  0, 152, :_reduce_10,
  1, 152, :_reduce_11,
  3, 152, :_reduce_12,
  0, 166, :_reduce_13,
  4, 146, :_reduce_14,
  3, 146, :_reduce_15,
  3, 146, :_reduce_none,
  3, 146, :_reduce_17,
  2, 146, :_reduce_18,
  3, 146, :_reduce_19,
  3, 146, :_reduce_20,
  3, 146, :_reduce_21,
  3, 146, :_reduce_22,
  3, 146, :_reduce_23,
  4, 146, :_reduce_none,
  3, 146, :_reduce_25,
  3, 146, :_reduce_26,
  3, 146, :_reduce_27,
  6, 146, :_reduce_none,
  5, 146, :_reduce_29,
  5, 146, :_reduce_none,
  5, 146, :_reduce_none,
  3, 146, :_reduce_none,
  3, 146, :_reduce_33,
  3, 146, :_reduce_34,
  3, 146, :_reduce_35,
  1, 146, :_reduce_none,
  1, 165, :_reduce_none,
  3, 165, :_reduce_38,
  3, 165, :_reduce_39,
  2, 165, :_reduce_40,
  2, 165, :_reduce_41,
  1, 165, :_reduce_none,
  1, 155, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_46,
  2, 157, :_reduce_47,
  2, 157, :_reduce_48,
  1, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 174, :_reduce_none,
  2, 168, :_reduce_53,
  3, 168, :_reduce_none,
  4, 168, :_reduce_55,
  5, 168, :_reduce_none,
  4, 168, :_reduce_57,
  5, 168, :_reduce_none,
  2, 168, :_reduce_59,
  2, 168, :_reduce_60,
  1, 158, :_reduce_61,
  3, 158, :_reduce_62,
  1, 178, :_reduce_63,
  3, 178, :_reduce_64,
  1, 177, :_reduce_65,
  2, 177, :_reduce_66,
  3, 177, :_reduce_67,
  5, 177, :_reduce_none,
  2, 177, :_reduce_69,
  4, 177, :_reduce_none,
  2, 177, :_reduce_71,
  1, 177, :_reduce_72,
  3, 177, :_reduce_none,
  1, 180, :_reduce_74,
  3, 180, :_reduce_75,
  2, 179, :_reduce_76,
  3, 179, :_reduce_77,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 181, :_reduce_80,
  4, 181, :_reduce_81,
  3, 181, :_reduce_82,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  2, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 156, :_reduce_88,
  4, 156, :_reduce_89,
  3, 156, :_reduce_90,
  3, 156, :_reduce_91,
  3, 156, :_reduce_92,
  3, 156, :_reduce_93,
  2, 156, :_reduce_94,
  1, 156, :_reduce_none,
  1, 184, :_reduce_none,
  2, 185, :_reduce_97,
  1, 185, :_reduce_98,
  3, 185, :_reduce_99,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_103,
  1, 186, :_reduce_104,
  1, 153, :_reduce_105,
  1, 153, :_reduce_none,
  1, 154, :_reduce_107,
  3, 154, :_reduce_108,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  3, 167, :_reduce_183,
  5, 167, :_reduce_184,
  3, 167, :_reduce_185,
  6, 167, :_reduce_186,
  5, 167, :_reduce_187,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  4, 167, :_reduce_none,
  3, 167, :_reduce_none,
  3, 167, :_reduce_193,
  3, 167, :_reduce_194,
  3, 167, :_reduce_195,
  3, 167, :_reduce_196,
  3, 167, :_reduce_197,
  3, 167, :_reduce_198,
  3, 167, :_reduce_199,
  3, 167, :_reduce_200,
  4, 167, :_reduce_201,
  4, 167, :_reduce_202,
  2, 167, :_reduce_203,
  2, 167, :_reduce_204,
  3, 167, :_reduce_205,
  3, 167, :_reduce_206,
  3, 167, :_reduce_207,
  3, 167, :_reduce_208,
  3, 167, :_reduce_209,
  3, 167, :_reduce_210,
  3, 167, :_reduce_211,
  3, 167, :_reduce_212,
  3, 167, :_reduce_213,
  3, 167, :_reduce_214,
  3, 167, :_reduce_215,
  3, 167, :_reduce_216,
  3, 167, :_reduce_217,
  2, 167, :_reduce_218,
  2, 167, :_reduce_219,
  3, 167, :_reduce_220,
  3, 167, :_reduce_221,
  3, 167, :_reduce_222,
  3, 167, :_reduce_223,
  3, 167, :_reduce_224,
  5, 167, :_reduce_225,
  1, 167, :_reduce_none,
  1, 164, :_reduce_none,
  1, 161, :_reduce_228,
  2, 161, :_reduce_229,
  2, 161, :_reduce_230,
  4, 161, :_reduce_231,
  2, 161, :_reduce_232,
  3, 196, :_reduce_233,
  4, 196, :_reduce_234,
  4, 196, :_reduce_none,
  6, 196, :_reduce_none,
  1, 197, :_reduce_237,
  1, 197, :_reduce_none,
  1, 170, :_reduce_239,
  2, 170, :_reduce_240,
  2, 170, :_reduce_241,
  4, 170, :_reduce_242,
  1, 170, :_reduce_243,
  4, 200, :_reduce_none,
  1, 200, :_reduce_none,
  0, 202, :_reduce_246,
  2, 173, :_reduce_247,
  1, 201, :_reduce_none,
  2, 201, :_reduce_249,
  3, 201, :_reduce_250,
  2, 199, :_reduce_251,
  2, 198, :_reduce_252,
  0, 198, :_reduce_253,
  1, 193, :_reduce_254,
  2, 193, :_reduce_255,
  3, 193, :_reduce_256,
  4, 193, :_reduce_257,
  3, 163, :_reduce_258,
  4, 163, :_reduce_259,
  2, 163, :_reduce_260,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 224, :_reduce_270,
  4, 191, :_reduce_271,
  4, 191, :_reduce_272,
  3, 191, :_reduce_273,
  3, 191, :_reduce_274,
  2, 191, :_reduce_275,
  4, 191, :_reduce_276,
  3, 191, :_reduce_277,
  3, 191, :_reduce_278,
  1, 191, :_reduce_279,
  4, 191, :_reduce_280,
  3, 191, :_reduce_281,
  1, 191, :_reduce_282,
  5, 191, :_reduce_283,
  4, 191, :_reduce_284,
  3, 191, :_reduce_285,
  2, 191, :_reduce_286,
  1, 191, :_reduce_none,
  2, 191, :_reduce_288,
  2, 191, :_reduce_289,
  6, 191, :_reduce_290,
  6, 191, :_reduce_291,
  0, 225, :_reduce_292,
  0, 226, :_reduce_293,
  7, 191, :_reduce_294,
  0, 227, :_reduce_295,
  0, 228, :_reduce_296,
  7, 191, :_reduce_297,
  5, 191, :_reduce_298,
  4, 191, :_reduce_299,
  5, 191, :_reduce_300,
  0, 229, :_reduce_301,
  0, 230, :_reduce_302,
  9, 191, :_reduce_303,
  0, 231, :_reduce_304,
  6, 191, :_reduce_305,
  0, 232, :_reduce_306,
  0, 233, :_reduce_307,
  8, 191, :_reduce_308,
  0, 234, :_reduce_309,
  0, 235, :_reduce_310,
  6, 191, :_reduce_311,
  0, 236, :_reduce_312,
  6, 191, :_reduce_313,
  0, 237, :_reduce_314,
  0, 238, :_reduce_315,
  9, 191, :_reduce_316,
  1, 191, :_reduce_317,
  1, 191, :_reduce_318,
  1, 191, :_reduce_319,
  1, 191, :_reduce_none,
  1, 160, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  2, 214, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  2, 213, :_reduce_329,
  3, 239, :_reduce_330,
  2, 239, :_reduce_331,
  1, 239, :_reduce_none,
  1, 239, :_reduce_none,
  3, 240, :_reduce_334,
  3, 240, :_reduce_335,
  1, 215, :_reduce_336,
  5, 215, :_reduce_337,
  1, 150, :_reduce_none,
  2, 150, :_reduce_339,
  1, 242, :_reduce_340,
  3, 242, :_reduce_341,
  3, 243, :_reduce_342,
  1, 175, :_reduce_none,
  2, 175, :_reduce_344,
  1, 175, :_reduce_345,
  3, 175, :_reduce_346,
  1, 244, :_reduce_347,
  2, 246, :_reduce_348,
  1, 246, :_reduce_349,
  6, 241, :_reduce_350,
  4, 241, :_reduce_351,
  4, 241, :_reduce_352,
  2, 241, :_reduce_353,
  2, 241, :_reduce_354,
  4, 241, :_reduce_355,
  2, 241, :_reduce_356,
  2, 241, :_reduce_357,
  1, 241, :_reduce_358,
  0, 250, :_reduce_359,
  5, 249, :_reduce_360,
  2, 171, :_reduce_361,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  2, 212, :_reduce_364,
  4, 212, :_reduce_365,
  3, 212, :_reduce_366,
  4, 212, :_reduce_367,
  3, 212, :_reduce_368,
  2, 212, :_reduce_369,
  1, 212, :_reduce_370,
  0, 252, :_reduce_371,
  5, 211, :_reduce_372,
  0, 253, :_reduce_373,
  5, 211, :_reduce_374,
  0, 255, :_reduce_375,
  6, 217, :_reduce_376,
  1, 254, :_reduce_377,
  1, 254, :_reduce_none,
  6, 149, :_reduce_379,
  0, 149, :_reduce_380,
  1, 256, :_reduce_381,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  2, 257, :_reduce_384,
  1, 257, :_reduce_385,
  2, 151, :_reduce_386,
  1, 151, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 204, :_reduce_391,
  1, 260, :_reduce_none,
  2, 260, :_reduce_393,
  3, 261, :_reduce_394,
  1, 261, :_reduce_395,
  3, 205, :_reduce_396,
  3, 206, :_reduce_397,
  3, 207, :_reduce_398,
  3, 207, :_reduce_399,
  1, 264, :_reduce_400,
  3, 264, :_reduce_401,
  1, 265, :_reduce_402,
  2, 265, :_reduce_403,
  3, 208, :_reduce_404,
  3, 208, :_reduce_405,
  1, 267, :_reduce_406,
  3, 267, :_reduce_407,
  1, 262, :_reduce_408,
  2, 262, :_reduce_409,
  1, 263, :_reduce_410,
  2, 263, :_reduce_411,
  1, 266, :_reduce_412,
  0, 269, :_reduce_413,
  3, 266, :_reduce_414,
  0, 270, :_reduce_415,
  4, 266, :_reduce_416,
  1, 268, :_reduce_417,
  1, 268, :_reduce_418,
  1, 268, :_reduce_419,
  1, 268, :_reduce_none,
  2, 189, :_reduce_421,
  1, 189, :_reduce_422,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 259, :_reduce_427,
  1, 258, :_reduce_428,
  1, 258, :_reduce_429,
  2, 258, :_reduce_430,
  2, 258, :_reduce_431,
  2, 258, :_reduce_432,
  2, 258, :_reduce_433,
  1, 183, :_reduce_434,
  1, 183, :_reduce_435,
  1, 183, :_reduce_436,
  1, 183, :_reduce_437,
  1, 183, :_reduce_438,
  1, 183, :_reduce_439,
  1, 183, :_reduce_440,
  1, 183, :_reduce_441,
  1, 183, :_reduce_442,
  1, 183, :_reduce_443,
  1, 183, :_reduce_444,
  1, 209, :_reduce_445,
  1, 159, :_reduce_446,
  1, 162, :_reduce_447,
  1, 162, :_reduce_none,
  1, 219, :_reduce_449,
  3, 219, :_reduce_450,
  2, 219, :_reduce_451,
  4, 221, :_reduce_452,
  2, 221, :_reduce_453,
  6, 272, :_reduce_454,
  4, 272, :_reduce_455,
  4, 272, :_reduce_456,
  2, 272, :_reduce_457,
  4, 272, :_reduce_458,
  2, 272, :_reduce_459,
  2, 272, :_reduce_460,
  1, 272, :_reduce_461,
  1, 272, :_reduce_462,
  2, 272, :_reduce_463,
  0, 272, :_reduce_464,
  1, 275, :_reduce_none,
  1, 275, :_reduce_466,
  1, 276, :_reduce_467,
  1, 276, :_reduce_468,
  1, 276, :_reduce_469,
  1, 276, :_reduce_470,
  1, 277, :_reduce_471,
  3, 277, :_reduce_472,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 279, :_reduce_475,
  3, 279, :_reduce_none,
  1, 280, :_reduce_477,
  3, 280, :_reduce_478,
  1, 278, :_reduce_none,
  4, 278, :_reduce_none,
  3, 278, :_reduce_none,
  2, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 247, :_reduce_484,
  3, 247, :_reduce_485,
  3, 281, :_reduce_486,
  1, 273, :_reduce_487,
  3, 273, :_reduce_488,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 248, :_reduce_491,
  1, 248, :_reduce_492,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  2, 245, :_reduce_495,
  2, 274, :_reduce_496,
  0, 274, :_reduce_497,
  1, 222, :_reduce_498,
  4, 222, :_reduce_499,
  0, 210, :_reduce_500,
  2, 210, :_reduce_501,
  1, 195, :_reduce_502,
  3, 195, :_reduce_503,
  3, 284, :_reduce_504,
  2, 284, :_reduce_505,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  0, 143, :_reduce_none,
  1, 143, :_reduce_none,
  0, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 145, :_reduce_none,
  2, 145, :_reduce_none,
  0, 192, :_reduce_529 ]

racc_reduce_n = 530

racc_shift_n = 931

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "-@NUM" => 137,
  "+@NUM" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = []
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_243(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_259(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_274(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_301(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_302(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_312(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_341(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_345(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      nil
                    
    result
end

def _reduce_350(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_359(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_361(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 362 omitted

# reduce 363 omitted

def _reduce_364(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_371(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_377(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 378 omitted

def _reduce_379(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_380(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_381(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 382 omitted

# reduce 383 omitted

def _reduce_384(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_385(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_386(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 392 omitted

def _reduce_393(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_394(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_395(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_396(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_399(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_400(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_401(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_402(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_409(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_411(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_413(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_414(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 420 omitted

def _reduce_421(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 423 omitted

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

def _reduce_427(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_431(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_432(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_433(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_434(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_447(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 448 omitted

def _reduce_449(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_450(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_451(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_453(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_kwargs(val[0], nil)
                    
    result
end

def _reduce_463(val, _values, result)
                      result = new_kwargs(val[0], val[1])
                    
    result
end

def _reduce_464(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 465 omitted

def _reduce_466(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_467(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_468(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_469(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_470(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_471(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_472(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 473 omitted

# reduce 474 omitted

def _reduce_475(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 476 omitted

def _reduce_477(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_478(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 479 omitted

# reduce 480 omitted

# reduce 481 omitted

# reduce 482 omitted

# reduce 483 omitted

def _reduce_484(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_485(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 489 omitted

# reduce 490 omitted

def _reduce_491(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_492(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 493 omitted

# reduce 494 omitted

def _reduce_495(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = []
                    
    result
end

def _reduce_501(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_502(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_503(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_504(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_505(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

def _reduce_529(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
